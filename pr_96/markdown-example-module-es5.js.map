{"version":3,"sources":["webpack:///apps/demo/src/app/examples/markdown-example/markdown-example.component.css","webpack:///apps/demo/src/app/examples/markdown-example/markdown-example.module.ts","webpack:///apps/demo/src/app/examples/markdown-example/markdown-example.component.ts","webpack:///apps/demo/src/app/examples/markdown-example/markdown-example.component.html"],"names":["MarkdownExampleModule","name","componentType","declarations","imports","MarkdownExampleComponent","http","markdown$","readmeMD$","get","responseType","exampleMD$","emojiList","subscription","unsubscribe","pipe","subscribe","value","markdown","newMarkdown","next","$event","event","preventDefault","alert","link","href","selector","template"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCmBFA,qBAAqB;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,iBAChC,yBAAa;AACX,mBAAO,CACL;AACEC,kBAAI,EAAE,iBADR;AAEEC,2BAAa,EAAE;AAFjB,aADK,CAAP;AAMD;AAR+B;;AAAA;AAAA,S;;AAArBF,2BAAqB,6DATjC,+DAAS;AACRG,oBAAY,EAAE,CAAC,oFAAD,CADN;AAERC,eAAO,EAAE,CACP,4DADO,EAEP,oEAFO,EAGP,uFAHO,EAIP,6DAJO;AAFD,OAAT,CASiC,GAArBJ,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPAK,wBAAwB;AAiBnC,0CAAoBC,IAApB,EAAsC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAfZ,eAAAC,SAAA,GAAY,IAAI,4CAAJ,EAAZ;AAER,eAAAC,SAAA,GAAY,KAAKF,IAAL,CAAUG,GAAV,CAAc,oCAAd,EAAoD;AAC9DC,wBAAY,EAAE;AADgD,WAApD,CAAZ;AAIA,eAAAC,UAAA,GAAa,KAAKL,IAAL,CAAUG,GAAV,CAAc,qBAAd,EAAqC;AAChDC,wBAAY,EAAE;AADkC,WAArC,CAAb;AAOA,eAAAE,SAAA,GAAY,oEAAZ;AAEyC;;AAjBN;AAAA;AAAA,iBAmBnC,uBAAW;AACT,iBAAKC,YAAL,CAAkBC,WAAlB;AACD;AArBkC;AAAA;AAAA,iBAuBnC,oBAAQ;AAAA;;AACN,iBAAKD,YAAL,GAAoB,KAAKN,SAAL,CACjBQ,IADiB,CAEhB,oEAAa,GAAb,CAFgB,EAIjBC,SAJiB,CAIP,UAAAC,KAAK,EAAI;AAClB,mBAAI,CAACC,QAAL,CAAcA,QAAd,GAAyBD,KAAzB;AACD,aANiB,CAApB;AAOD;AA/BkC;AAAA;AAAA,iBAiCnC,kBAAUE,WAAV,EAA+BD,QAA/B,EAA4C;AAC1C,iBAAKX,SAAL,CAAea,IAAf,CAAoBD,WAApB;AACD;AAnCkC;AAAA;AAAA,iBAqCnC,yBAAiBE,MAAjB,EAA4C;AAC1CA,kBAAM,CAACC,KAAP,CAAaC,cAAb;AAEAC,iBAAK,CAAC,qCAAqCH,MAAM,CAACI,IAAP,CAAYC,IAAlD,CAAL;AACD;AAzCkC;;AAAA;AAAA,S;;;;gBAX7B;;;;;;gBAuBL,uD;AAAS,iBAAC,UAAD,EAAa;AAAC,sBAAQ;AAAT,WAAb;;;AAZCrB,8BAAwB,6DALpC,gEAAU;AACTsB,gBAAQ,EAAE,uBADD;AAETC,gBAAQ,EAAR,mFAFS;;AAAA,OAAV,CAKoC,E,+EAiBT,+D,EAjBS,GAAxBvB,wBAAwB,CAAxB;;;;;;;;;;;;;;;;ACZb;AAAe;;;AAAA","file":"markdown-example-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtYXJrZG93bi1leGFtcGxlLmNvbXBvbmVudC5jc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MarkdownExampleComponent } from './markdown-example.component';\nimport {LazyModule, LazyModuleComponentInfo} from \"@gewd/lazy/contracts\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport {HighlightEditorModule} from \"@gewd/components/highlight-editor\";\nimport {MarkdownModule} from \"@gewd/markdown\";\n\n\n\n@NgModule({\n  declarations: [MarkdownExampleComponent],\n  imports: [\n    CommonModule,\n    MatTabsModule,\n    HighlightEditorModule,\n    MarkdownModule,\n  ]\n})\nexport class MarkdownExampleModule  implements LazyModule {\n  getComponents (): LazyModuleComponentInfo[] {\n    return [\n      {\n        name: 'MarkdownExample',\n        componentType: MarkdownExampleComponent\n      }\n    ];\n  }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Subject, Subscription} from \"rxjs\";\nimport {debounceTime} from \"rxjs/operators\";\nimport {MarkdownLinkClicked} from \"@gewd/markdown\";\nimport {emojiExampleList} from \"../../example-emoji-list\";\n\n@Component({\n  selector: 'gewd-markdown-example',\n  templateUrl: './markdown-example.component.html',\n  styleUrls: ['./markdown-example.component.css']\n})\nexport class MarkdownExampleComponent implements OnInit {\n  private subscription: Subscription;\n  private markdown$ = new Subject();\n\n  readmeMD$ = this.http.get('./assets/readme/markdown/README.md', {\n    responseType: 'text'\n  });\n\n  exampleMD$ = this.http.get('./assets/example.md', {\n    responseType: 'text'\n  });\n\n  @ViewChild('markdown', {static: true})\n  markdown: any;\n\n  emojiList = emojiExampleList;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnDestroy (): void {\n    this.subscription.unsubscribe();\n  }\n\n  ngOnInit (): void {\n    this.subscription = this.markdown$\n      .pipe(\n        debounceTime(350)\n      )\n      .subscribe(value => {\n        this.markdown.markdown = value;\n      })\n  }\n\n  changeIt (newMarkdown: string, markdown: any): void  {\n    this.markdown$.next(newMarkdown);\n  }\n\n  handleLinkClick ($event: MarkdownLinkClicked): void  {\n    $event.event.preventDefault();\n\n    alert('Link Click Handled by Markdown: ' + $event.link.href);\n  }\n}\n","export default \"<mat-tab-group>\\n  <mat-tab label=\\\"README.MD\\\" #readmeTab>\\n    <gewd-markdown *ngIf=\\\"readmeTab.isActive\\\"\\n                   [markdown]=\\\"readmeMD$ | async\\\"></gewd-markdown>\\n  </mat-tab>\\n  <mat-tab label=\\\"Try out\\\">\\n\\n    <gewd-prism-editor [value]=\\\"exampleMD$|async\\\"\\n                       #prismEditorComponent\\n                       language=\\\"markdown\\\"\\n                       (changed)=\\\"changeIt($event, markdown)\\\">\\n    </gewd-prism-editor>\\n\\n\\n    <gewd-markdown #markdown [useCache]=\\\"true\\\"\\n                   (onLinkClick)=\\\"handleLinkClick($event)\\\">\\n    </gewd-markdown>\\n\\n  </mat-tab>\\n\\n  <mat-tab label=\\\"Emoji Overview\\\" #tab>\\n    <i>Note: Emojilist is only passed to markdown once this tab is activated :)</i>\\n    <gewd-markdown [markdown]=\\\"tab.isActive ? emojiList : ''\\\"></gewd-markdown>\\n  </mat-tab>\\n</mat-tab-group>\\n\";"]}