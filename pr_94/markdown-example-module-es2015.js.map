{"version":3,"sources":["./apps/demo/src/app/examples/markdown-example/markdown-example.component.css","./apps/demo/src/app/examples/markdown-example/markdown-example.module.ts","./apps/demo/src/app/examples/markdown-example/markdown-example.component.ts","./apps/demo/src/app/examples/markdown-example/markdown-example.component.html"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAe,6GAA8C,uIAAuI,E;;;;;;;;;;;;;;;;;;;;;;ACA3J;AACM;AACyB;AAEnB;AACmB;AAC1B;IAajC,qBAAqB,SAArB,qBAAqB;IAChC,aAAa;QACX,OAAO;YACL;gBACE,IAAI,EAAE,iBAAiB;gBACvB,aAAa,EAAE,oFAAwB;aACxC;SACF,CAAC;IACJ,CAAC;CACF;AATY,qBAAqB;IATjC,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,oFAAwB,CAAC;QACxC,OAAO,EAAE;YACP,4DAAY;YACZ,oEAAa;YACb,uFAAqB;YACrB,6DAAc;SACf;KACF,CAAC;GACW,qBAAqB,CASjC;AATiC;;;;;;;;;;;;;;;;;;;;;;;;;;ACnByB;AACX;AACL;AACC;AAEc;IAO7C,wBAAwB,SAAxB,wBAAwB;IAiBnC,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAf5B,cAAS,GAAG,IAAI,4CAAO,EAAE,CAAC;QAElC,cAAS,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,oCAAoC,EAAE;YAC9D,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;QAEH,eAAU,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,EAAE;YAChD,YAAY,EAAE,MAAM;SACrB,CAAC,CAAC;QAKH,cAAS,GAAG,oEAAgB,CAAC;IAEW,CAAC;IAEzC,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;IAClC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS;aAC/B,IAAI,CACH,mEAAY,CAAC,GAAG,CAAC,CAClB;aACA,SAAS,CAAC,KAAK,CAAC,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,KAAK,CAAC;QACjC,CAAC,CAAC;IACN,CAAC;IAED,QAAQ,CAAE,WAAmB,EAAE,QAAa;QAC1C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACnC,CAAC;IAED,eAAe,CAAE,MAA2B;QAC1C,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;QAE9B,KAAK,CAAC,kCAAkC,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC/D,CAAC;CACF;;YArDO,+DAAU;;;uBAuBf,uDAAS,SAAC,UAAU,EAAE,EAAC,MAAM,EAAE,IAAI,EAAC;;AAZ1B,wBAAwB;IALpC,+DAAS,CAAC;QACT,QAAQ,EAAE,uBAAuB;QACjC,6FAAgD;;KAEjD,CAAC;mFAkB0B,+DAAU;GAjBzB,wBAAwB,CA0CpC;AA1CoC;;;;;;;;;;;;;ACZrC;AAAe,g6BAAi2B,E","file":"markdown-example-module-es2015.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtYXJrZG93bi1leGFtcGxlLmNvbXBvbmVudC5jc3MifQ== */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MarkdownExampleComponent } from './markdown-example.component';\nimport {LazyModule, LazyModuleComponentInfo} from \"@gewd/lazy/contracts\";\nimport {MatTabsModule} from \"@angular/material/tabs\";\nimport {HighlightEditorModule} from \"@gewd/components/highlight-editor\";\nimport {MarkdownModule} from \"@gewd/markdown\";\n\n\n\n@NgModule({\n  declarations: [MarkdownExampleComponent],\n  imports: [\n    CommonModule,\n    MatTabsModule,\n    HighlightEditorModule,\n    MarkdownModule,\n  ]\n})\nexport class MarkdownExampleModule  implements LazyModule {\n  getComponents (): LazyModuleComponentInfo[] {\n    return [\n      {\n        name: 'MarkdownExample',\n        componentType: MarkdownExampleComponent\n      }\n    ];\n  }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Subject, Subscription} from \"rxjs\";\nimport {debounceTime} from \"rxjs/operators\";\nimport {MarkdownLinkClicked} from \"@gewd/markdown\";\nimport {emojiExampleList} from \"../../example-emoji-list\";\n\n@Component({\n  selector: 'gewd-markdown-example',\n  templateUrl: './markdown-example.component.html',\n  styleUrls: ['./markdown-example.component.css']\n})\nexport class MarkdownExampleComponent implements OnInit {\n  private subscription: Subscription;\n  private markdown$ = new Subject();\n\n  readmeMD$ = this.http.get('./assets/readme/markdown/README.md', {\n    responseType: 'text'\n  });\n\n  exampleMD$ = this.http.get('./assets/example.md', {\n    responseType: 'text'\n  });\n\n  @ViewChild('markdown', {static: true})\n  markdown: any;\n\n  emojiList = emojiExampleList;\n\n  constructor(private http: HttpClient) { }\n\n  ngOnDestroy (): void {\n    this.subscription.unsubscribe();\n  }\n\n  ngOnInit (): void {\n    this.subscription = this.markdown$\n      .pipe(\n        debounceTime(350)\n      )\n      .subscribe(value => {\n        this.markdown.markdown = value;\n      })\n  }\n\n  changeIt (newMarkdown: string, markdown: any): void  {\n    this.markdown$.next(newMarkdown);\n  }\n\n  handleLinkClick ($event: MarkdownLinkClicked): void  {\n    $event.event.preventDefault();\n\n    alert('Link Click Handled by Markdown: ' + $event.link.href);\n  }\n}\n","export default \"<mat-tab-group>\\n  <mat-tab label=\\\"README.MD\\\" #readmeTab>\\n    <gewd-markdown *ngIf=\\\"readmeTab.isActive\\\"\\n                   [markdown]=\\\"readmeMD$ | async\\\"></gewd-markdown>\\n  </mat-tab>\\n  <mat-tab label=\\\"Try out\\\">\\n\\n    <gewd-prism-editor [value]=\\\"exampleMD$|async\\\"\\n                       #prismEditorComponent\\n                       language=\\\"markdown\\\"\\n                       (changed)=\\\"changeIt($event, markdown)\\\">\\n    </gewd-prism-editor>\\n\\n\\n    <gewd-markdown #markdown [useCache]=\\\"true\\\"\\n                   (onLinkClick)=\\\"handleLinkClick($event)\\\">\\n    </gewd-markdown>\\n\\n  </mat-tab>\\n\\n  <mat-tab label=\\\"Emoji Overview\\\" #tab>\\n    <i>Note: Emojilist is only passed to markdown once this tab is activated :)</i>\\n    <gewd-markdown [markdown]=\\\"tab.isActive ? emojiList : ''\\\"></gewd-markdown>\\n  </mat-tab>\\n</mat-tab-group>\\n\";"],"sourceRoot":"webpack:///"}