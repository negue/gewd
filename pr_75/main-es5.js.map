{"version":3,"sources":["webpack:///libs/mat-utils/custom-form-control/public_api.ts","webpack:///libs/ng-utils/css-props/css-props.module.ts","webpack:///apps/demo/src/environments/environment.ts","webpack:///apps/demo/src/app/example-panel/example-panel.component.ts","webpack:///apps/demo/src/app/app.component.scss","webpack:///libs/markdown/module/public_api.ts","webpack:///libs/ng-utils/css-props/css-props.directive.ts","webpack:///libs/markdown/contracts/default-options.ts","webpack:///libs/components/highlight-editor/public_api.ts","webpack:///libs/ng-utils/dynamic-portal/public_api.ts","webpack:///libs/mat-utils/material-icons/register_icons.module.ts","webpack:///libs/markdown/contracts/public_api.ts","webpack:///libs/ng-utils/morphdom/index.ts","webpack:///apps/demo/src/app/markdown-toolbar.component.ts","webpack:///libs/markdown/service/public_api.ts","webpack:///apps/demo/src/app/example-panel/example-panel.component.html","webpack:///libs/ng-utils/ng-error-overlay/ng-error/ng-error.component.ts","webpack:///libs/ng-utils/css-props/update-dynamic-style.ts","webpack:///libs/ng-utils/components/public_api.ts","webpack:///apps/demo/src/app/app.component.html","webpack:///libs/lazy/registry/public_api.ts","webpack:///libs/ng-utils/css-props/public_api.ts","webpack:///libs/markdown/contracts/index.ts","webpack:///libs/markdown/utils/simple-hash.ts","webpack:///libs/ng-utils/morphdom/morphdom.directive.ts","webpack:///libs/ng-utils/morphdom/morphdom.service.ts","webpack:///libs/lazy/registry/index.ts","webpack:///apps/demo/src/app/app.module.ts","webpack:///libs/lazy/loader/public_api.ts","webpack:///libs/ng-utils/components/index.ts","webpack:///libs/markdown/utils/lazy.ts","webpack:///libs/ng-utils/components/simple-pager/simple-pager.module.ts","webpack:///libs/ng-utils/dynamic-portal/portal-source.directive.ts","webpack:///libs/ng-utils/ng-error-overlay/public_api.ts","webpack:///libs/components/highlight-editor/editor.keys.ts","webpack:///libs/ng-utils/css-props/index.ts","webpack:///apps/demo/src/main.ts","webpack:///libs/ng-utils/ng-error-overlay/ng-error/ng-error.component.scss","webpack:///libs/components/highlight-editor/highlight-editor.component.scss","webpack:///libs/components/highlight-editor/highlight-editor.component.ts","webpack:///libs/ng-utils/dynamic-portal/dynamic-portal/dynamic-portal.component.scss","webpack:///libs/components/highlight-editor/highlight.service.ts","webpack:///libs/ng-utils/dynamic-portal/dynamic-portal/dynamic-portal.component.html","webpack:///libs/ng-utils/css-props/element-css.service.ts","webpack:///libs/ng-utils/dynamic-portal/portal-hub.service.ts","webpack:///libs/lazy/loader/lazy-module.component.ts","webpack:///libs/ng-utils/ng-error-overlay/ng-error/ng-error-overlay.module.ts","webpack:///libs/markdown/module/index.ts","webpack:///libs/lazy/loader/index.ts","webpack:///libs/ng-utils/bootstrap-component/index.ts","webpack:///libs/ng-utils/bootstrap-component/public_api.ts","webpack:///libs/components/highlight-editor/editor.functions.ts","webpack:///libs/ng-utils/ng-error-overlay/ng-error/error-overlay/error-overlay.component.scss","webpack:///libs/ng-utils/css-props/css-props.service.ts","webpack:///libs/markdown/module/render-markdown/render-markdown.component.html","webpack:///libs/markdown/service/markdown.service.ts","webpack:///libs/mat-utils/material-icons/public_api.ts","webpack:///libs/components/highlight-editor/index.ts","webpack:///libs/ng-utils/ng-error-overlay/ng-error/error-overlay/error-overlay.component.ts","webpack:///libs/ng-utils/ng-error-overlay/ng-error/error-overlay/error-overlay.component.html","webpack:///libs/components/highlight-editor/highlight-editor.component.html","webpack:///libs/ng-utils/css-props/update-css-props.ts","webpack:///libs/ng-utils/morphdom/public_api.ts","webpack:///libs/lazy/loader/gewd-lazy-loader.module.ts","webpack:///apps/demo/src/app/example-panel/example-panel.component.css","webpack:///apps/demo/src/app/markdown.worker.ts","webpack:///libs/ng-utils/components/simple-pager/simple-pager.component.ts","webpack:///libs/mat-utils/material-icons/register_icons.ts","webpack:///libs/markdown/module/render-markdown/render-markdown.component.scss","webpack:///libs/mat-utils/custom-form-control/index.ts","webpack:///libs/ng-utils/components/simple-pager/simple-pager.component.html","webpack:///libs/ng-utils/dynamic-portal/dynamic-portal.module.ts","webpack:///libs/ng-utils/ng-error-overlay/ng-error/error-handler.service.ts","webpack:///libs/markdown/service/injection-token.ts","webpack:///libs/markdown/service/index.ts","webpack:///libs/mat-utils/material-icons/index.ts","webpack:///apps/demo/src/app/app.component.ts","webpack:///libs/markdown/service/markdown-cache.service.ts","webpack:///libs/mat-utils/custom-form-control/custom-form-control.module.ts","webpack:///libs/lazy/utils/index.ts","webpack:///libs/mat-utils/custom-form-control/custom-form-control.component.ts","webpack:///libs/markdown/utils/public_api.ts","webpack:///libs/ng-utils/components/simple-pager/simple-pager.component.scss","webpack:///libs/ng-utils/morphdom/morphdom.module.ts","webpack:///libs/components/highlight-editor/highlight-editor.module.ts","webpack:///libs/lazy/utils/lazy.ts","webpack:///libs/markdown/module/markdown.module.ts","webpack:///libs/ng-utils/ng-error-overlay/index.ts","webpack:///apps/demo/src/app/md-cache-example.service.ts","webpack:///libs/ng-utils/dynamic-portal/dynamic-portal/dynamic-portal.component.ts","webpack:///libs/lazy/utils/public_api.ts","webpack:///libs/lazy/loader/lazy.component.ts","webpack:///libs/ng-utils/bootstrap-component/bootstrap-component.module.ts","webpack:///libs/ng-utils/ng-error-overlay/ng-error/ng-error.component.html","webpack:///libs/lazy/registry/registry.ts","webpack:///libs/markdown/module/render-markdown/render-markdown.component.ts","webpack:///libs/markdown/utils/index.ts","webpack:///$_lazy_route_resource lazy namespace object","webpack:///libs/ng-utils/dynamic-portal/index.ts"],"names":["CssPropsModule","declarations","imports","environment","production","modules","ExamplePanelComponent","packageName","packageTitle","moduleName","componentName","lazyModuleComponent","moduleAlias","component","setComponent","selector","template","CSSPropsDirective","element","cssPropsService","cssProps","updateElementVars","nativeElement","currentValue","DEFAULT_PRISM_OPTIONS","assetPath","languageFileType","languageMap","ts","DEFAULT_MERMAID_OPTIONS","flowchart","useMaxWidth","htmlLabels","startOnLoad","theme","themeCSS","REGISTORY_ICONS_PAIR_TOKEN","RegisterIconsModule","iconRegistry","sanitizer","registryIconsPairsArray","iconPair","useValue","ngModule","providers","provide","multi","MarkdownToolbarComponent","markdown","NgErrorComponent","errorService","cd","showIndex","visible$","errors$","error$","pipe","a","c","slice","value","filter","v","_destroy$","config","zIndex","subscribe","next","length","markForCheck","complete","updateDynamicStyle","document","styleId","customCss","style","getStyleElement","replaceCss","head","getElementsByTagName","allStyles","styleIndex","styleInHeader","item","id","createElement","type","appendChild","styleTag","childNodes","forEach","child","removeChild","createTextNode","simpleHash","str","hash","i","chr","charCodeAt","toString","MorphdomDirective","morphService","tagName","done","morphDom","morphElement","options","emit","MorphdomService","ngZone","newElementContent","runOutsideAngular","providedIn","marked","Worker","markdownExampleLazy","then","MarkdownExampleModule","codeMirrorExampleLazy","CodemirrorExampleModule","lazyLoadExampleLazy","LazyloadExampleModule","componentsExampleLazy","ComponentsExampleModule","portalLazy","PortalModule","AppModule","withServerTransition","appId","forRoot","relativeLinkResolution","withLazy","moduleConfig","load","register","pathToIcons","iconArray","getWorker","prism","cs","highlightMarkdownCode","additionalPluginPaths","mermaidPath","mermaidOptions","useExisting","bootstrap","Lazy","loader","cachedPromise","SimplePagerModule","exports","PortalSourceDirective","templateRef","hub","changes","keyChange","previousValue","unregisterTemplate","registerTemplate","key","KEY_BACKSPACE","KEY_DELETE","KEY_ENTER","KEY_ESCAPE","KEY_TAB","KEY_ARROW_UP","KEY_ARROW_DOWN","KEY_ARROW_LEFT","KEY_ARROW_RIGHT","KEY_SHIFT","KEY_ALT","KEY_CTRL","KEY_META","KEY_CAPS_LOCK","ALL_CHARS_REGEX","IGNORE_KEY_EVENTS","addEventListener","bootstrapModule","moduleRef","applicationRef","injector","get","componentRef","components","err","window","error","HighlightEditorComponent","language","debounceTime","useTabs","spaceWidth","changed","value$","language$","debounce$","showHighlighedCode$","allCharsRegex","focussed$","lastKeyTriggered$","_destroyed$","updateLinesAmount","debounceTimeInterval","code","lastKeyEvent","highlightToPreTag","lines","split","event","textarea","exec","includes","handledTab","selectionStart","selectionEnd","applyToTextarea","textChanged","result","newValue","newSelectionStart","newSelectionEnd","codeToHighlight","highlightArea","childrenOnly","highlightCode","innerHighlighed","addedBeginNewLine","addedEndNewLine","startsWith","endsWith","blur","focus","changeDetection","OnPush","PrismOptionsInjectorToken","HighlightService","markdownOptions","prismOptions","platformId","wrappedWorker","init","workerProxy","initPrism","lang","highlight","Object","ElementCssService","elementRef","PortalSourceAction","PortalHubService","templateSourceSubject","templateSourceHub","LazyModuleComponent","resolver","angularCompiler","componentCreated","componentLoading","showError","componentInstance","unsubForOutputs$","alreadySettingComponent","moduleInDictionary","LazyModuleComponents","loadedModule","getValue","importedModule","compileModuleAndAllComponentsAsync","factory","ngModuleFactory","create","componentFactories","moduleFactory","instance","getComponents","componentInfo","find","cf","name","componentType","componentFactory","componentFactoryResolver","resolveComponentFactory","targetContainer","clear","createComponent","changeDetectorRef","setInputs","setOutputs","detectChanges","changedAndDifferent","unsubOutputs","change","componentInputs","inputs","keys","inputKey","componentOutputs","outputs","outputKey","emitter","read","NgErrorOverlayModule","entryComponents","elementName","handleTab","startSelection","endSelection","spaceLength","backwards","shiftKey","valueToWork","padEnd","textValueUntilStart","substr","textValueFromStart","preventDefault","CssPropsService","body","Document","compiledRegex","renderId","MarkdownService","cache","canTriggerMermaidLoad","mermaidAddedToPage","mermaidCacheKey","mermaidConfig","assign","triggerMermaid","compile","parsedMarkdown","match","triggerMermaidLoadScript","mermaidInstance","mermaid","matched","innerContent","cleanUpMermaidRaw","rendered","getCachedPart","cached","errorStr","parse","e","render","saveCachedPart","replace","mermaidRaw","Promise","resolve","_mermaidNode","hidden","reject","scriptTag","src","onload","initialize","parseError","console","ErrorOverlayComponent","errorStack","updateCssProps","entries","k","setProperty","REGISTORY_LAZY_LOADED_MODULE_TOKEN","GewdLazyLoaderModule","registerLazyLoads","lazyInfo","RegisterLazyModuleComponent","map","module","SimplePagerComponent","position","items","registerIcons","icon","addSvgIcon","bypassSecurityTrustResourceUrl","DynamicPortalModule","DEFAULT_CONFIG","ignoreErrors","NG_ERROR_CONFIG_TOKEN","ErrorHandlerService","ev","handleError","message","stack","MarkdownOptionsInjectorToken","AppComponent","http","markDownReadmeMD$","responseType","ngErrorOverlay$","matUtilsReadmeMD$","editorLanguage$","editorExample$","aForm","group","errorSource","subString","$event","currentPrismExample","trim","updateValueChanged","MarkdownCacheService","rawMarkdown","renderedMarkdown","raw","CustomFormControlModule","CustomFormControlComponent","formBuilder","_focusMonitor","_elementRef","_formField","ngControl","onChange","_","onTouched","stateChangeSubject","stateChanges","valueAccessor","_value","focused","empty","stopMonitoring","ids","controlElement","setAttribute","join","val","fn","isDisabled","disabled","MorphdomModule","HighlightEditorModule","MarkdownModule","MdCacheExampleService","enabled","createInstance","localForageCache","ready","setItem","getItem","DynamicPortalComponent","key$","templateToShow$","getTemplate$","checkKeyAndPushTemplate","LazyComponent","importComponent","LazyComponents","imported","theComp","BOOTSTRAP_COMPONENT_TOKEN","bootstrapComponent","appRef","bootstrapConfig","domElement","append","ref","attachView","hostView","BootstrapComponentModule","bootstrapConfigs","DynamicLoaderRegistry","lazyImport","RenderMarkdownComponent","service","showRawMd","useCache","allowMermaid","onLinkClick","_htmlToShow$","parsedHtml$","_markdown","target","aHref","parentElement","link","getCached","cachedMarkdown","bypassSecurityTrustHtml","compileMarkdown","parsedHtml","saveCached","webpackEmptyAsyncContext","req","Error"],"mappings":"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","file":"main-es5.js","sourcesContent":["export * from './custom-form-control.module';\nexport * from './custom-form-control.component';\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CSSPropsDirective } from './css-props.directive';\n\n/** @dynamic - allows Document in ngc build */\n@NgModule({\n  declarations: [CSSPropsDirective],\n  imports: [\n    CommonModule\n  ],\n})\nexport class CssPropsModule {\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  modules: [\n    // NgInspectModule\n  ]\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, Input, OnInit} from '@angular/core';\nimport {LazyModuleComponent} from \"@gewd/lazy/loader\";\n\n@Component({\n  selector: 'gewd-example-panel',\n  templateUrl: './example-panel.component.html',\n  styleUrls: ['./example-panel.component.css']\n})\nexport class ExamplePanelComponent implements OnInit {\n\n  @Input()\n  packageName = '';\n\n  @Input()\n  packageTitle = '';\n\n  @Input()\n  moduleName = '';\n\n  @Input()\n  componentName = '';\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  applyLazyModuleInputs(lazyModuleComponent: LazyModuleComponent): void  {\n    lazyModuleComponent.moduleAlias = this.moduleName;\n    lazyModuleComponent.component = this.componentName;\n    lazyModuleComponent.setComponent();\n  }\n}\n","export default \"/*\\n * Remove template code below\\n */\\n:host {\\n  display: block;\\n  font-family: sans-serif;\\n  min-width: 300px;\\n  max-width: 600px;\\n  margin: 50px auto;\\n}\\n.dynamic-portal-border {\\n  background: darkgreen;\\n  padding: 5px;\\n  margin: 15px 0;\\n  border: 2px dashed green;\\n  display: block;\\n}\\n.npm-link {\\n  height: 20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7RUFBQTtBQUdBO0VBQ0UsY0FBQTtFQUNBLHVCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0FBQ0Y7QUFFQTtFQUNFLHFCQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7RUFDQSx3QkFBQTtFQUNBLGNBQUE7QUFDRjtBQUVBO0VBQ0UsWUFBQTtBQUNGIiwiZmlsZSI6ImFwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBSZW1vdmUgdGVtcGxhdGUgY29kZSBiZWxvd1xuICovXG46aG9zdCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjtcbiAgbWluLXdpZHRoOiAzMDBweDtcbiAgbWF4LXdpZHRoOiA2MDBweDtcbiAgbWFyZ2luOiA1MHB4IGF1dG87XG59XG5cbi5keW5hbWljLXBvcnRhbC1ib3JkZXIge1xuICBiYWNrZ3JvdW5kOiBkYXJrZ3JlZW47XG4gIHBhZGRpbmc6IDVweDtcbiAgbWFyZ2luOiAxNXB4IDA7XG4gIGJvcmRlcjogMnB4IGRhc2hlZCBncmVlbjtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi5ucG0tbGluayB7XG4gIGhlaWdodDogMjBweDtcbn1cbiJdfQ== */\";","export * from './markdown.module';\nexport * from './render-markdown/render-markdown.component';\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { CssPropsService } from './css-props.service';\n\n/*\n * Workaround for setting CSS custom properties:\n * https://github.com/angular/angular/issues/9343\n *\n * Cannot work for any style properties.\n */\n@Directive({\n  selector: '[cssProps]',\n})\nexport class CSSPropsDirective implements OnChanges {\n\n  @Input() cssProps: any;\n\n  constructor(private element: ElementRef<HTMLElement>,\n              private cssPropsService: CssPropsService) {\n  }\n\n  ngOnChanges({cssProps}: SimpleChanges): void  {\n    this.cssPropsService.updateElementVars(\n      this.element.nativeElement,\n      cssProps.currentValue\n    );\n  }\n}\n","import { PrismOptions } from './worker.interface';\n\nexport const DEFAULT_PRISM_OPTIONS: PrismOptions = {\n  assetPath: './assets/prism/',\n  languageFileType: 'js',\n  languageMap: {\n    ts: 'typescript'\n  }\n};\n\n// https://mermaid-js.github.io/mermaid/#/mermaidAPI?id=mermaidapi-configuration-defaults\nexport const DEFAULT_MERMAID_OPTIONS = {\n  flowchart: {\n    useMaxWidth: true,\n    htmlLabels: true\n  },\n  startOnLoad: false,\n  theme: 'neutral',\n  themeCSS:'.label { font-family: Source Sans Pro,Helvetica Neue,Arial,sans-serif !important; font-size: 15px; } .label foreignObject { overflow: visible; }'\n};\n","export * from './highlight.service';\nexport * from './highlight-editor.component';\nexport * from './editor.functions';\nexport * from './editor.keys';\nexport * from './highlight-editor.module';\n\n","export * from './dynamic-portal.module';\nexport * from './dynamic-portal/dynamic-portal.component';\nexport * from './portal-hub.service';\nexport * from './portal-source.directive';\n","import { Inject, InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { registerIcons, RegistryIconsPair } from './register_icons';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nexport const REGISTORY_ICONS_PAIR_TOKEN = new InjectionToken<RegistryIconsPair>('@gewd/mat-utils/RegistryIconsPair');\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class RegisterIconsModule {\n  static register (useValue: RegistryIconsPair): ModuleWithProviders<RegisterIconsModule> {\n    return {\n      ngModule: RegisterIconsModule,\n      providers: [\n        { provide: REGISTORY_ICONS_PAIR_TOKEN, useValue, multi: true }\n      ]\n    };\n  }\n\n  constructor (iconRegistry: MatIconRegistry,\n               sanitizer: DomSanitizer,\n               @Inject(REGISTORY_ICONS_PAIR_TOKEN) registryIconsPairsArray: RegistryIconsPair[]) {\n    for (const iconPair of registryIconsPairsArray) {\n      registerIcons(iconRegistry, sanitizer, iconPair);\n    }\n  }\n}\n","export * from './worker.interface';\nexport * from './default-options';\n","export * from './public_api';\n","import { Component, Injectable } from '@angular/core';\nimport { RenderMarkdownComponent } from '@gewd/markdown/module';\n\n@Component({\n  template: ``,\n  selector: 'gewd-markdown-toolbar'\n})\nexport class MarkdownToolbarComponent {\n  constructor (private markdown: RenderMarkdownComponent) {\n  }\n}\n","export * from './markdown.service';\nexport * from './markdown-cache.service';\nexport * from './injection-token';\n","export default \"<mat-expansion-panel (opened)=\\\"applyLazyModuleInputs(lazyModuleComponent)\\\">\\n  <mat-expansion-panel-header>\\n    <a [href]=\\\"'https://www.npmjs.com/package/' + packageName\\\" rel=\\\"nofollow\\\"\\n       class=\\\"npm-link\\\">\\n      <img [src]=\\\"'https://img.shields.io/npm/v/' + packageName + '.svg?'\\\"\\n           [alt]=\\\"packageName + ' NPM Version'\\\">\\n    </a>\\n    &nbsp;- {{ packageTitle }}\\n  </mat-expansion-panel-header>\\n\\n  <gewd-lazy-module-component\\n    #lazyModuleComponent>\\n    <mat-progress-bar isLoading mode=\\\"indeterminate\\\" color=\\\"accent\\\"></mat-progress-bar>\\n  </gewd-lazy-module-component>\\n</mat-expansion-panel>\\n\";","import { ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit } from '@angular/core';\nimport { ErrorHandlerService } from './error-handler.service';\nimport { BehaviorSubject, Subject } from 'rxjs';\nimport { map, scan, takeUntil } from 'rxjs/operators';\nimport { CssPropsService } from '@gewd/ng-utils/css-props';\n\n@Component({\n  selector: 'ng-error',\n  templateUrl: './ng-error.component.html',\n  styleUrls: ['./ng-error.component.scss']\n})\nexport class NgErrorComponent implements OnInit, OnDestroy {\n\n  public showIndex = 0;\n\n  public visible$ = new BehaviorSubject(false);\n\n  public errors$ = this.errorService.error$.pipe(\n    // add all errors to an array\n    // only keep the newest 10\n    scan((a, c) => [c, ...a].slice(0, 10), []),\n    map(value => value.filter(v => !!v))\n  );\n\n  private _destroy$ = new Subject();\n\n  constructor(private errorService: ErrorHandlerService,\n              private cd: ChangeDetectorRef,\n              private cssProps: CssPropsService,\n              private element: ElementRef<HTMLElement>) {\n    cssProps.updateElementVars(element.nativeElement, {\n      '--overlay-zindex': errorService.config.zIndex\n    })\n  }\n\n  ngOnInit(): void {\n    this.errors$.pipe(\n      takeUntil(this._destroy$)\n    ).subscribe(value => {\n      this.visible$.next(value.length > 0);\n      this.cd.markForCheck();\n    })\n  }\n\n  ngOnDestroy (): void {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  hide (): void  {\n    this.visible$.next(false);\n  }\n}\n","// Todo use @gewd/utils for that?\n\nexport function updateDynamicStyle(\n  document: Document,\n  styleId: string,\n  customCss: string\n): void  {\n  const style = getStyleElement(document, styleId);\n\n  replaceCss(document, style, customCss);\n}\n\nexport function getStyleElement(\n  document: Document,\n  styleId: string,\n): HTMLStyleElement {\n  const head = document.getElementsByTagName('head')[0];\n  const allStyles = head.getElementsByTagName('style');\n  let style: HTMLStyleElement = null;\n\n  for (let styleIndex = 0; styleIndex < allStyles.length; styleIndex++) {\n    const styleInHeader = allStyles.item(styleIndex);\n\n    if (styleInHeader.id === styleId) {\n      style = styleInHeader;\n      break;\n    }\n  }\n\n  if (style === null) {\n    style = document.createElement('style');\n    style.id = styleId;\n    style.type = 'text/css';\n    head.appendChild(style);\n  }\n\n  return style;\n}\n\nexport function replaceCss(\n  document: Document,\n  styleTag: HTMLStyleElement,\n  customCss: string\n): void  {\n  if (styleTag.childNodes.length > 0) {\n    styleTag.childNodes.forEach(child => {\n      styleTag.removeChild(child);\n    })\n  }\n\n  styleTag.appendChild(document.createTextNode(customCss));\n}\n","export * from './simple-pager/simple-pager.module';\nexport * from './simple-pager/simple-pager.component';\n","export default \"<h2>Open Dev-Tools to see the network calls.</h2>\\n\\n<gewd-example-panel packageName=\\\"@gewd/markdown\\\"\\n                    packageTitle=\\\"Markdown\\\"\\n                    moduleName=\\\"markdown-example\\\"\\n                    componentName=\\\"MarkdownExample\\\">\\n\\n</gewd-example-panel>\\n\\n<br/>\\n\\n<gewd-example-panel packageName=\\\"@gewd/components\\\"\\n                    packageTitle=\\\"CodeMirror\\\"\\n                    moduleName=\\\"codemirror-example\\\"\\n                    componentName=\\\"CodeMirrorExample\\\">\\n\\n</gewd-example-panel>\\n\\n<br/>\\n\\n<gewd-example-panel packageName=\\\"@gewd/lazy\\\"\\n                    packageTitle=\\\"Lazy Components\\\"\\n                    moduleName=\\\"lazyload-example\\\"\\n                    componentName=\\\"LazyLoadExample\\\">\\n\\n</gewd-example-panel>\\n\\n<br/>\\n\\n\\n<gewd-example-panel packageName=\\\"@gewd/components\\\"\\n                    packageTitle=\\\"Components\\\"\\n                    moduleName=\\\"components-example\\\"\\n                    componentName=\\\"ComponentsExample\\\">\\n\\n</gewd-example-panel>\\n\\n<br/>\\n\\n<mat-expansion-panel>\\n  <mat-expansion-panel-header>\\n    <a href=\\\"https://www.npmjs.com/package/@gewd/ng-utils\\\" rel=\\\"nofollow\\\"\\n       class=\\\"npm-link\\\">\\n      <img src=\\\"https://img.shields.io/npm/v/@gewd/ng-utils.svg?\\\"\\n           alt=\\\"Gewd NG-Utils NPM Version\\\">\\n    </a>\\n    &nbsp;- Dynamic Portal Component\\n  </mat-expansion-panel-header>\\n\\n  <dynamic-portal key=\\\"portalKey\\\" class=\\\"dynamic-portal-border\\\">\\n    Dynamic Portal Placeholder\\n  </dynamic-portal>\\n\\n  <br/>\\n\\n  <gewd-lazy-module-component\\n    #lazyPortalModuleComponent\\n    [componentInputs]=\\\"{ testProp: 'Binding value', portalKey: 'portalKey' }\\\"\\n  >\\n    <button mat-raised-button color=\\\"primary\\\"\\n            (click)=\\\"setLazyPortalModuleComp(lazyPortalModuleComponent)\\\">\\n      Load Lazy Module-Component: Test Module-Comp <br/> (this button as content will be replaced)\\n    </button>\\n  </gewd-lazy-module-component>\\n</mat-expansion-panel>\\n\\n<br/>\\n\\n<mat-expansion-panel>\\n  <mat-expansion-panel-header>\\n    <a href=\\\"https://www.npmjs.com/package/@gewd/ng-utils\\\" rel=\\\"nofollow\\\"\\n       class=\\\"npm-link\\\">\\n      <img src=\\\"https://img.shields.io/npm/v/@gewd/ng-utils.svg?\\\"\\n           alt=\\\"Gewd NG-Utils NPM Version\\\">\\n    </a>\\n    &nbsp;- NgErrorOverlay\\n  </mat-expansion-panel-header>\\n\\n  <gewd-markdown [markdown]=\\\"ngErrorOverlay$ | async\\\">\\n\\n  </gewd-markdown>\\n\\n  <button (click)=\\\"makeError()\\\">Trigger an error</button>\\n</mat-expansion-panel>\\n\\n<br/>\\n\\n<mat-expansion-panel>\\n  <mat-expansion-panel-header>\\n    <a href=\\\"https://www.npmjs.com/package/@gewd/mat-utils\\\" rel=\\\"nofollow\\\"\\n       class=\\\"npm-link\\\">\\n      <img src=\\\"https://img.shields.io/npm/v/@gewd/mat-utils.svg?\\\"\\n           alt=\\\"Gewd Mat-Utils NPM Version\\\">\\n    </a>\\n    &nbsp;- Material Utils\\n  </mat-expansion-panel-header>\\n\\n  <gewd-markdown [markdown]=\\\"matUtilsReadmeMD$ | async\\\">\\n\\n  </gewd-markdown>\\n\\n  <mat-icon svgIcon=\\\"add\\\"></mat-icon>\\n</mat-expansion-panel>\\n\\n\\n<br/>\\n\\n<mat-expansion-panel (opened)=\\\"openedEditorPanel()\\\">\\n  <mat-expansion-panel-header>\\n    <a href=\\\"https://www.npmjs.com/package/@gewd/components\\\" rel=\\\"nofollow\\\"\\n       class=\\\"npm-link\\\">\\n      <img src=\\\"https://img.shields.io/npm/v/@gewd/components.svg?\\\"\\n           alt=\\\"Gewd Components NPM Version\\\">\\n    </a>\\n    &nbsp;- PrismEditor\\n  </mat-expansion-panel-header>\\n\\n  <mat-form-field>\\n    <mat-select placeholder=\\\"Examples\\\" [value]=\\\"currentPrismExample\\\"\\n                (valueChange)=\\\"updateValueChanged($event)\\\">\\n      <mat-option value=\\\"empty\\\">Empty</mat-option>\\n      <mat-option value=\\\"readme_md\\\">Markdown Readme</mat-option>\\n      <mat-option value=\\\"ts_example\\\">TypeScript</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Render debounce-time\\\"\\n           value=\\\"200\\\" type=\\\"number\\\"\\n           #renderDebounce>\\n  </mat-form-field>\\n\\n\\n  <mat-form-field>\\n    <input matInput placeholder=\\\"Editor Height (px)\\\"\\n           value=\\\"100\\\" type=\\\"number\\\"\\n           #editorHeight>\\n  </mat-form-field>\\n\\n  <gewd-prism-editor [value]=\\\"editorExample$ | async\\\"\\n                     [language]=\\\"editorLanguage$ | async\\\"\\n                     [debounceTime]=\\\"+renderDebounce.value\\\"\\n                     [style.--editor-min-height.px]=\\\"editorHeight.value\\\"\\n                     #prismEditor>\\n  </gewd-prism-editor>\\n\\n  <br/>\\n\\n  <h4>Mat-Form-Field Example</h4>\\n\\n  <form [formGroup]=\\\"aForm\\\">\\n\\n    <mat-form-field style=\\\"width: 100%\\\">\\n\\n      <gewd-custom-form-control placeholder=\\\"test\\\"\\n                                formControlName=\\\"editor\\\"\\n                                #customFormControl\\n      >\\n        <gewd-prism-editor [value]=\\\"editorExample$ | async\\\"\\n                           [language]=\\\"editorLanguage$ | async\\\"\\n                           [debounceTime]=\\\"+renderDebounce.value\\\"\\n                           [style.--editor-min-height.px]=\\\"editorHeight.value\\\"\\n                           (value$)=\\\"customFormControl.value = $event\\\"\\n                           (focussed$)=\\\"customFormControl.focused = $event\\\" #editoe>\\n        </gewd-prism-editor>\\n      </gewd-custom-form-control>\\n    </mat-form-field>\\n  </form>\\n\\n\\n  Form Field Data:\\n  <hr>\\n  {{ aForm.value | json }}\\n</mat-expansion-panel>\\n\";","export * from './registry';\n","export * from './css-props.module';\nexport * from './css-props.directive';\nexport * from './css-props.service';\nexport * from './update-css-props';\nexport * from './update-dynamic-style';\nexport * from './element-css.service';\n","export * from './public_api';\n","export function simpleHash (str: string): string {\n  let hash = 0, i, chr;\n  if (!str || str.length === 0) return '';\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i);\n    // tslint:disable-next-line:no-bitwise\n    hash = ((hash << 5) - hash) + chr;\n\n    // tslint:disable-next-line:no-bitwise\n    hash |= 0; // Convert to 32bit integer\n  }\n  return hash.toString(16);\n}\n","import { Directive, ElementRef, EventEmitter, Input, OnChanges, Output, SimpleChanges } from '@angular/core';\nimport { MorphDomOptions, MorphdomService } from './morphdom.service';\n\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[morphDom]'\n})\nexport class MorphdomDirective implements OnChanges {\n\n  // tslint:disable-next-line:no-input-rename\n  @Input('morphDom')\n  public morphDom: string;\n\n  @Input()\n  public tagName = 'div';\n\n  @Input()\n  public options: MorphDomOptions;\n\n  @Output()\n  public done = new EventEmitter<ElementRef<Element>>();\n\n  constructor(private element: ElementRef<Element>,\n              private morphService: MorphdomService) {\n  }\n\n  ngOnChanges ({morphDom}: SimpleChanges): void {\n    if (morphDom && morphDom.currentValue) {\n      this.morphService.morphElement(this.element,\n        `<${this.tagName}>${morphDom.currentValue}</${this.tagName}>`,\n        this.options);\n\n      this.done.emit(this.element);\n    }\n  }\n\n}\n","import { ElementRef, Injectable, NgZone } from '@angular/core';\n\nimport morphdom from 'morphdom';\n\nexport interface MorphDomOptions {\n  getNodeKey?: (node: Node) => any;\n  onBeforeNodeAdded?: (node: Node) => Node;\n  onNodeAdded?: (node: Node) => Node;\n  onBeforeElUpdated?: (fromEl: HTMLElement, toEl: HTMLElement) => boolean;\n  onElUpdated?: (el: HTMLElement) => void;\n  onBeforeNodeDiscarded?: (node: Node) => boolean;\n  onNodeDiscarded?: (node: Node) => void;\n  onBeforeElChildrenUpdated?: (fromEl: HTMLElement, toEl: HTMLElement) => boolean;\n  childrenOnly?: boolean;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MorphdomService {\n\n  constructor(private ngZone: NgZone) {\n\n  }\n\n  public morphElement(element: ElementRef<Element>,\n                      newElementContent: string,\n                      options: MorphDomOptions): void  {\n     this.ngZone.runOutsideAngular(() => {\n        morphdom(element.nativeElement,\n          newElementContent,\n          options\n        );\n      });\n  }\n}\n","export * from './public_api';\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { MarkdownModule } from '@gewd/markdown';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DEFAULT_PRISM_OPTIONS, MarkdownServiceOptions } from '@gewd/markdown/contracts';\n\nimport { GewdLazyLoaderModule } from '@gewd/lazy/loader';\nimport { MatButtonModule } from '@angular/material/button';\nimport { DynamicPortalModule } from '@gewd/ng-utils/dynamic-portal';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MarkdownCacheService, MarkdownOptionsInjectorToken } from '@gewd/markdown/service';\nimport { MdCacheExampleService } from './md-cache-example.service';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MarkdownToolbarComponent } from './markdown-toolbar.component';\nimport { NgErrorOverlayModule } from '@gewd/ng-utils/ng-error-overlay';\nimport { environment } from '../environments/environment';\nimport { HighlightEditorModule } from '@gewd/components/highlight-editor';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatInputModule } from '@angular/material/input';\nimport { RegisterIconsModule } from '@gewd/mat-utils/material-icons';\nimport { MatIconModule } from '@angular/material/icon';\nimport { ExamplePanelComponent } from './example-panel/example-panel.component';\nimport { CustomFormControlModule } from '@gewd/mat-utils/custom-form-control';\nimport { Lazy } from '@gewd/lazy/utils';\n\nconst marked = () => new Worker('./markdown.worker.ts', { type: 'module' });\n\nconst markdownExampleLazy =new Lazy(() => import(/* webpackChunkName: \"markdown-example-module\" */ './examples/markdown-example/markdown-example.module')\n  .then(({MarkdownExampleModule}) => MarkdownExampleModule));\n\nconst codeMirrorExampleLazy =new Lazy(() => import(/* webpackChunkName: \"codemirror-example-module\" */ './examples/codemirror-example/codemirror-example.module')\n  .then(({CodemirrorExampleModule}) => CodemirrorExampleModule));\n\n\nconst lazyLoadExampleLazy =new Lazy(\n  () => import(/* webpackChunkName: \"lazyload-example-module\" */ './examples/lazyload-example/lazyload-example.module')\n    .then(({LazyloadExampleModule}) => LazyloadExampleModule)\n);\n\nconst componentsExampleLazy =new Lazy(\n  () => import(/* webpackChunkName: \"components-example-module\" */ './examples/components-example/components-example.module')\n    .then(({ComponentsExampleModule}) => ComponentsExampleModule)\n);\n\nconst portalLazy = new Lazy(\n  () => import(/* webpackChunkName: \"lazy-portal-module\" */ './examples/lazyload-example/lazy-wrapper/lazy-portal-source')\n    .then(({PortalModule}) => PortalModule)\n);\n\n@NgModule({\n  declarations: [AppComponent, MarkdownToolbarComponent, ExamplePanelComponent],\n  imports: [\n    BrowserModule.withServerTransition({appId: 'serverApp'}),\n    RouterModule.forRoot([], { relativeLinkResolution: 'legacy' }),\n    HttpClientModule,\n    MarkdownModule, FormsModule,\n    ReactiveFormsModule,\n    MatExpansionModule, MatTabsModule,\n    BrowserAnimationsModule,\n    GewdLazyLoaderModule.withLazy([\n      {\n        moduleName: 'markdown-example',\n        moduleConfig: {\n          load: markdownExampleLazy\n        }\n      },\n      {\n        moduleName: 'codemirror-example',\n        moduleConfig: {\n          load: codeMirrorExampleLazy\n        }\n      },\n      {\n        moduleName: 'lazyload-example',\n        moduleConfig: {\n          load: lazyLoadExampleLazy\n        }\n      },\n      {\n        moduleName: 'portal-module',\n        moduleConfig: {\n          load: portalLazy\n        }\n      },\n      {\n        moduleName: 'components-example',\n        moduleConfig: {\n          load: componentsExampleLazy\n        }\n      }\n    ]),\n    MatButtonModule,\n    DynamicPortalModule,\n    MatProgressBarModule,\n    NgErrorOverlayModule,\n    ...environment.modules,\n    HighlightEditorModule,\n    MatSelectModule,\n    MatInputModule,\n    CustomFormControlModule,\n    RegisterIconsModule.register({\n      pathToIcons: './assets/material_icons',\n      iconArray: [\n        'add',\n        'art_track',\n      ]\n    }),\n    MatIconModule\n  ],\n  providers: [\n    {\n      provide: MarkdownOptionsInjectorToken,\n      useValue: {\n        getWorker: marked,\n        options: {\n          prism: {\n            ...DEFAULT_PRISM_OPTIONS,\n\n            /** if needed **/\n            languageFileType: 'min.js',  // if you want to use the minified assets\n            languageMap: {               // alias to load the real file\n              ts: 'typescript',          // default\n              cs: 'csharp'               // additional\n            },\n            highlightMarkdownCode: true,\n            additionalPluginPaths: [\n              'assets/prism/prism-css-extras.min.js',  // needed for the inline color\n              'assets/prism/prism-plugin-inline-color.worker-func.js',\n              'assets/prism/prism-plugin-bracket-match.worker-func.js'\n            ]\n          }\n        },\n        mermaidPath: 'mermaid.min.js',\n        mermaidOptions: {\n          theme: 'neutral',\n        }\n      } as MarkdownServiceOptions\n    },\n    MdCacheExampleService,\n    {\n      provide: MarkdownCacheService,\n      useExisting: MdCacheExampleService\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","export * from './lazy.component';\nexport * from './gewd-lazy-loader.module';\nexport * from './lazy-module.component';\n","export * from './public_api';\n","export class Lazy<T> {\n  private cachedPromise: Promise<T>;\n\n  static create<T>(loader: () => Promise<T>): Lazy<T> {\n    return new Lazy<T>(loader);\n  }\n\n  constructor (private loader: () => Promise<T>) {\n\n  }\n\n  public getValue (): Promise<T> {\n    if (this.cachedPromise) {\n      return this.cachedPromise;\n    }\n\n    return this.cachedPromise = this.loader();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SimplePagerComponent } from './simple-pager.component';\n\n@NgModule({\n  declarations: [SimplePagerComponent],\n  exports: [\n    SimplePagerComponent\n  ],\n  imports: [\n    CommonModule,\n  ]\n})\nexport class SimplePagerModule { }\n","import {Directive, Input, OnChanges, OnDestroy, OnInit, SimpleChanges, TemplateRef} from '@angular/core';\nimport { PortalHubService } from './portal-hub.service';\n\n@Directive({\n  selector: '[dynamicPortalSource]'\n})\nexport class PortalSourceDirective implements OnInit, OnDestroy, OnChanges {\n  @Input('dynamicPortalSource')\n  public key: string;\n\n  constructor (private templateRef: TemplateRef<any>,\n               private hub: PortalHubService) {\n  }\n\n  ngOnChanges (changes: SimpleChanges): void {\n    const keyChange = changes['key'];\n    if (keyChange) {\n      if (keyChange.previousValue) {\n        this.unregisterTemplate(keyChange.previousValue);\n      }\n\n      this.registerTemplate(keyChange.currentValue);\n    }\n  }\n\n  ngOnDestroy (): void {\n    this.unregisterTemplate(this.key);\n  }\n\n  ngOnInit (): void {\n    if (!this.key) {\n      return;\n    }\n\n    this.registerTemplate(this.key);\n  }\n\n  private registerTemplate (key: string) {\n    this.hub.registerTemplate(key, this.templateRef);\n  }\n\n  private unregisterTemplate (key: string) {\n    this.hub.unregisterTemplate(key);\n  }\n}\n","export * from './ng-error/ng-error.component';\nexport * from './ng-error/ng-error-overlay.module';\n","export const KEY_BACKSPACE = \"Backspace\";\nexport const KEY_DELETE = \"Delete\";\nexport const KEY_ENTER  = \"Enter\";\nexport const KEY_ESCAPE  = \"Escape\";\nexport const KEY_TAB  = \"Tab\";\nexport const KEY_ARROW_UP = \"ArrowUp\";\nexport const KEY_ARROW_DOWN = \"ArrowDown\";\nexport const KEY_ARROW_LEFT = \"ArrowLeft\";\nexport const KEY_ARROW_RIGHT = \"ArrowRight\";\nexport const KEY_SHIFT = \"Shift\";\nexport const KEY_ALT = \"Alt\";\nexport const KEY_CTRL = \"Control\";\nexport const KEY_META = \"Meta\";\nexport const KEY_CAPS_LOCK = \"CapsLock\";\n\nexport const ALL_CHARS_REGEX = /^[1234567890a-zA-ZäöüÄÖÜ,;.:\\-_#+`´?(){}|\\[\\]@]+$/;\n\nexport const IGNORE_KEY_EVENTS = [\n  KEY_ARROW_UP, KEY_ARROW_DOWN,\n  KEY_ARROW_LEFT, KEY_ARROW_RIGHT,\n  KEY_SHIFT, KEY_ALT, KEY_CTRL,\n  KEY_META, KEY_CAPS_LOCK, KEY_ESCAPE\n];\n","export * from './public_api';\n","import { ApplicationRef, enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\nimport { enableDebugTools } from '@angular/platform-browser';\n\nif (environment.production) {\n  enableProdMode();\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  platformBrowserDynamic()\n    .bootstrapModule(AppModule)\n    .then(moduleRef => {\n      const applicationRef = moduleRef.injector.get(ApplicationRef);\n      const componentRef = applicationRef.components[0];\n      // allows to run `ng.profiler.timeChangeDetection();`\n      enableDebugTools(componentRef);\n    }).catch(err => window['console'].error(err));\n});\n\n\n","export default \".fullscreen {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  height: 100vh;\\n  width: 100vw;\\n  background: #454545DD;\\n  overflow: auto;\\n  z-index: var(--overlay-zindex);\\n}\\n.fullscreen simple-pager {\\n  height: calc(100% - 2rem);\\n  padding: 1rem;\\n}\\n.fullscreen simple-pager ::ng-deep .navigation-row-panel.only-one {\\n  opacity: 0;\\n}\\n.fullscreen ::ng-deep .error-name {\\n  display: none;\\n}\\n.close-button {\\n  position: fixed;\\n  top: 2rem;\\n  right: 2rem;\\n}\\n.error-next-to-navigation {\\n  color: red;\\n  font-family: Menlo, Consolas, monospace;\\n  font-size: large;\\n  line-height: 1.2;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL25nLWVycm9yLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EsYUFBQTtFQUNBLFlBQUE7RUFFQSxxQkFBQTtFQUNBLGNBQUE7RUFDQSw4QkFBQTtBQUFGO0FBRUU7RUFDRSx5QkFBQTtFQUNBLGFBQUE7QUFBSjtBQUdNO0VBQ0UsVUFBQTtBQURSO0FBTUU7RUFDRSxhQUFBO0FBSko7QUFTQTtFQUNFLGVBQUE7RUFDQSxTQUFBO0VBQ0EsV0FBQTtBQU5GO0FBU0E7RUFDRSxVQUFBO0VBQ0EsdUNBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0FBTkYiLCJmaWxlIjoibmctZXJyb3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZnVsbHNjcmVlbiB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBoZWlnaHQ6IDEwMHZoO1xuICB3aWR0aDogMTAwdnc7XG5cbiAgYmFja2dyb3VuZDogIzQ1NDU0NUREO1xuICBvdmVyZmxvdzogYXV0bztcbiAgei1pbmRleDogdmFyKC0tb3ZlcmxheS16aW5kZXgpO1xuXG4gIHNpbXBsZS1wYWdlciB7XG4gICAgaGVpZ2h0OiBjYWxjKDEwMCUgLSAycmVtKTtcbiAgICBwYWRkaW5nOiAxcmVtO1xuXG4gICAgOjpuZy1kZWVwIHtcbiAgICAgIC5uYXZpZ2F0aW9uLXJvdy1wYW5lbC5vbmx5LW9uZSB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgOjpuZy1kZWVwIC5lcnJvci1uYW1lIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG59XG5cblxuLmNsb3NlLWJ1dHRvbiB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgdG9wOiAycmVtO1xuICByaWdodDogMnJlbTtcbn1cblxuLmVycm9yLW5leHQtdG8tbmF2aWdhdGlvbiB7XG4gIGNvbG9yOiByZWQ7XG4gIGZvbnQtZmFtaWx5OiBNZW5sbywgQ29uc29sYXMsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiBsYXJnZTtcbiAgbGluZS1oZWlnaHQ6IDEuMjtcbn1cbiJdfQ== */\";","export default \":host {\\n  background: #2e2e2e;\\n  display: block;\\n  border: 1px solid lightgray;\\n  padding: 4px;\\n  --editor-min-height: 100px;\\n  --editor-max-height: 100px;\\n  --editor-font-size: 14px;\\n  --editor-line-height: 1.5;\\n  overflow-y: auto;\\n  min-height: var(--editor-min-height);\\n  max-height: var(--editor-max-height);\\n}\\n:host :host-context(.mat-form-field) {\\n  border: 0;\\n  padding: 0;\\n  background: inherit;\\n  width: 100%;\\n}\\n.editor {\\n  position: relative;\\n  padding: 0;\\n  -moz-tab-size: 2ch;\\n    -o-tab-size: 2ch;\\n       tab-size: 2ch;\\n  text-align: left;\\n  box-sizing: border-box;\\n  font-family: \\\"Fira code\\\", \\\"Fira Mono\\\", Consolas, Menlo, Courier, monospace;\\n  font-size: var(--editor-font-size);\\n  line-height: var(--editor-line-height);\\n  height: 100%;\\n}\\n/** shared styles */\\ntextarea, .highlight-area {\\n  margin: 0;\\n  border: 0;\\n  padding: 0;\\n  background: none;\\n  box-sizing: inherit;\\n  display: inherit;\\n  font-family: inherit;\\n  font-size: inherit;\\n  font-style: inherit;\\n  font-variant-ligatures: inherit;\\n  font-weight: inherit;\\n  letter-spacing: inherit;\\n  line-height: inherit;\\n  -moz-tab-size: inherit;\\n    -o-tab-size: inherit;\\n       tab-size: inherit;\\n  text-indent: inherit;\\n  text-rendering: inherit;\\n  text-transform: inherit;\\n  white-space: pre-wrap;\\n  word-break: keep-all;\\n  overflow-wrap: break-word;\\n  -webkit-font-smoothing: antialiased;\\n  min-height: var(--editor-min-height);\\n}\\ntextarea {\\n  outline: 0;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  height: 100%;\\n  width: 100%;\\n  resize: none;\\n  overflow: hidden;\\n  caret-color: white;\\n  caret-shape: bar;\\n}\\ntextarea:focus {\\n  outline: none !important;\\n}\\n.highlight-area {\\n  position: relative;\\n  pointer-events: none;\\n}\\n.editor__no-debounce textarea {\\n  -webkit-text-fill-color: transparent;\\n}\\n:not(.editor__no-debounce):not(.visible-highlight) textarea {\\n  color: inherit;\\n}\\n:not(.editor__no-debounce):not(.visible-highlight) .highlight-area {\\n  opacity: 0;\\n}\\n:not(.editor__no-debounce).visible-highlight textarea {\\n  -webkit-text-fill-color: transparent;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2hpZ2hsaWdodC1lZGl0b3IuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxtQkFBQTtFQUNBLGNBQUE7RUFFQSwyQkFBQTtFQUNBLFlBQUE7RUFVQSwwQkFBQTtFQUNBLDBCQUFBO0VBQ0Esd0JBQUE7RUFDQSx5QkFBQTtFQUdBLGdCQUFBO0VBRUEsb0NBQUE7RUFDQSxvQ0FBQTtBQVpGO0FBTEU7RUFDRSxTQUFBO0VBQ0EsVUFBQTtFQUNBLG1CQUFBO0VBQ0EsV0FBQTtBQU9KO0FBVUE7RUFDRSxrQkFBQTtFQUVBLFVBQUE7RUFFQSxrQkFBQTtJQUFBLGdCQUFBO09BQUEsYUFBQTtFQUVFLGdCQUFBO0VBQ0Esc0JBQUE7RUFFRiwwRUFBQTtFQUNBLGtDQUFBO0VBQ0Esc0NBQUE7RUFDQSxZQUFBO0FBWEY7QUFnQkEsbUJBQUE7QUFFQTtFQUNFLFNBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUVBLGdCQUFBO0VBRUEsbUJBQUE7RUFDQSxnQkFBQTtFQUNBLG9CQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtFQUNBLCtCQUFBO0VBQ0Esb0JBQUE7RUFDQSx1QkFBQTtFQUNBLG9CQUFBO0VBQ0Esc0JBQUE7SUFBQSxvQkFBQTtPQUFBLGlCQUFBO0VBQ0Esb0JBQUE7RUFDQSx1QkFBQTtFQUNBLHVCQUFBO0VBRUEscUJBQUE7RUFDQSxvQkFBQTtFQUNBLHlCQUFBO0VBR0EsbUNBQUE7RUFHQSxvQ0FBQTtBQXJCRjtBQXdCQTtFQUNFLFVBQUE7RUFDQSxrQkFBQTtFQUNBLE1BQUE7RUFDQSxPQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7RUFHQSxrQkFBQTtFQUNBLGdCQUFBO0FBdkJGO0FBeUJFO0VBQ0Usd0JBQUE7QUF2Qko7QUEyQkE7RUFDRSxrQkFBQTtFQUNBLG9CQUFBO0FBeEJGO0FBNkJFO0VBQ0Usb0NBQUE7QUExQko7QUFnQ0k7RUFDRSxjQUFBO0FBN0JOO0FBZ0NJO0VBQ0csVUFBQTtBQTlCUDtBQW1DSTtFQUNBLG9DQUFBO0FBakNKIiwiZmlsZSI6ImhpZ2hsaWdodC1lZGl0b3IuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGJhY2tncm91bmQ6ICMyZTJlMmU7XG4gIGRpc3BsYXk6IGJsb2NrO1xuXG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JheTtcbiAgcGFkZGluZzogNHB4O1xuXG4gIDpob3N0LWNvbnRleHQoLm1hdC1mb3JtLWZpZWxkKSB7XG4gICAgYm9yZGVyIDogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGJhY2tncm91bmQ6IGluaGVyaXQ7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cblxuXG4gIC0tZWRpdG9yLW1pbi1oZWlnaHQ6IDEwMHB4O1xuICAtLWVkaXRvci1tYXgtaGVpZ2h0OiAxMDBweDtcbiAgLS1lZGl0b3ItZm9udC1zaXplOiAxNHB4O1xuICAtLWVkaXRvci1saW5lLWhlaWdodDogMS41O1xuXG5cbiAgb3ZlcmZsb3cteTogYXV0bztcblxuICBtaW4taGVpZ2h0OiB2YXIoLS1lZGl0b3ItbWluLWhlaWdodCk7XG4gIG1heC1oZWlnaHQ6IHZhcigtLWVkaXRvci1tYXgtaGVpZ2h0KTtcbn1cblxuXG4uZWRpdG9yIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gIHBhZGRpbmc6IDA7XG5cbiAgdGFiLXNpemU6IDJjaDtcblxuICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcblxuICBmb250LWZhbWlseTogJ0ZpcmEgY29kZScsICdGaXJhIE1vbm8nLCBDb25zb2xhcywgTWVubG8sIENvdXJpZXIsIG1vbm9zcGFjZTtcbiAgZm9udC1zaXplOiB2YXIoLS1lZGl0b3ItZm9udC1zaXplKTtcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWVkaXRvci1saW5lLWhlaWdodCk7XG4gIGhlaWdodDogMTAwJTtcblxuICAvL21pbi1oZWlnaHQ6IHZhcigtLWVkaXRvci1taW4taGVpZ2h0KTtcbn1cblxuLyoqIHNoYXJlZCBzdHlsZXMgKi9cblxudGV4dGFyZWEsIC5oaWdobGlnaHQtYXJlYSB7XG4gIG1hcmdpbjogMDtcbiAgYm9yZGVyOiAwO1xuICBwYWRkaW5nOjA7XG5cbiAgYmFja2dyb3VuZDogbm9uZTtcblxuICBib3gtc2l6aW5nOiBpbmhlcml0O1xuICBkaXNwbGF5OiBpbmhlcml0O1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBmb250LXN0eWxlOiBpbmhlcml0O1xuICBmb250LXZhcmlhbnQtbGlnYXR1cmVzOiBpbmhlcml0O1xuICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgbGV0dGVyLXNwYWNpbmc6IGluaGVyaXQ7XG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICB0YWItc2l6ZTogaW5oZXJpdDtcbiAgdGV4dC1pbmRlbnQ6IGluaGVyaXQ7XG4gIHRleHQtcmVuZGVyaW5nOiBpbmhlcml0O1xuICB0ZXh0LXRyYW5zZm9ybTogaW5oZXJpdDtcblxuICB3aGl0ZS1zcGFjZTogcHJlLXdyYXA7XG4gIHdvcmQtYnJlYWs6IGtlZXAtYWxsO1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuXG4gIC8vIHRyYW5zaXRpb246IDIwbXMgY29sb3IsIG9wYWNpdHk7XG4gIC13ZWJraXQtZm9udC1zbW9vdGhpbmc6IGFudGlhbGlhc2VkO1xuXG5cbiAgbWluLWhlaWdodDogdmFyKC0tZWRpdG9yLW1pbi1oZWlnaHQpO1xufVxuXG50ZXh0YXJlYSB7XG4gIG91dGxpbmU6IDA7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xuICByZXNpemU6IG5vbmU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG5cblxuICBjYXJldC1jb2xvcjogd2hpdGU7XG4gIGNhcmV0LXNoYXBlOiBiYXI7XG5cbiAgJjpmb2N1cyB7XG4gICAgb3V0bGluZTogbm9uZSAhaW1wb3J0YW50O1xuICB9XG59XG5cbi5oaWdobGlnaHQtYXJlYSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcG9pbnRlci1ldmVudHM6IG5vbmU7XG5cbn1cblxuLmVkaXRvcl9fbm8tZGVib3VuY2Uge1xuICB0ZXh0YXJlYSB7XG4gICAgLXdlYmtpdC10ZXh0LWZpbGwtY29sb3I6IHRyYW5zcGFyZW50O1xuICB9XG59XG5cbjpub3QoLmVkaXRvcl9fbm8tZGVib3VuY2UpIHtcbiAgJjpub3QoLnZpc2libGUtaGlnaGxpZ2h0KSB7XG4gICAgdGV4dGFyZWEge1xuICAgICAgY29sb3I6IGluaGVyaXQ7XG4gICAgfVxuXG4gICAgLmhpZ2hsaWdodC1hcmVhIHtcbiAgICAgICBvcGFjaXR5OiAwO1xuICAgIH1cbiAgfVxuXG4gICYudmlzaWJsZS1oaWdobGlnaHQge1xuICAgIHRleHRhcmVhIHtcbiAgICAtd2Via2l0LXRleHQtZmlsbC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgfVxuICB9XG59XG4iXX0= */\";","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport { ElementCssService } from '@gewd/ng-utils/css-props';\nimport { HighlightService } from './highlight.service';\nimport { BehaviorSubject, combineLatest, Subject } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap, takeUntil } from 'rxjs/operators';\nimport { MorphdomService } from '@gewd/ng-utils/morphdom';\nimport { handleTab, HandleTabResponse } from './editor.functions';\nimport { ALL_CHARS_REGEX, IGNORE_KEY_EVENTS, KEY_TAB } from './editor.keys';\n\n\n@Component({\n  selector: 'gewd-prism-editor',\n  templateUrl: './highlight-editor.component.html',\n  styleUrls: ['./highlight-editor.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    ElementCssService\n  ]\n})\nexport class HighlightEditorComponent implements OnInit, OnChanges, OnDestroy {\n\n  @Input()\n  public value = '';\n\n  @Input()\n  public language = '';\n\n  @Input()\n  public debounceTime = 600;\n\n  @Input()\n  public useTabs = false;\n\n  @Input()\n  public spaceWidth = 2;\n\n  @Output()\n  public changed = new EventEmitter<string>();\n\n  @Output()\n  public value$ = new BehaviorSubject(this.value);\n  public language$ = new BehaviorSubject(this.language);\n  public debounce$ = new BehaviorSubject(this.debounceTime);\n\n  public showHighlighedCode$ = new BehaviorSubject(false);\n\n  @Input()\n  public allCharsRegex = ALL_CHARS_REGEX;\n\n  @ViewChild('textarea')\n  public textarea: ElementRef<HTMLTextAreaElement>;\n\n  @ViewChild('highlightArea')\n  public highlightArea: ElementRef<HTMLPreElement>;\n\n  @Output()\n  focussed$ = new EventEmitter();\n\n  private lastKeyTriggered$ = new BehaviorSubject<KeyboardEvent>(null);\n  private _destroyed$ = new Subject();\n\n  constructor(private cd: ChangeDetectorRef,\n              private cssProps: ElementCssService,\n              private prism: HighlightService,\n              private ngZone: NgZone,\n              private morphService: MorphdomService) {\n  }\n\n  ngOnInit(): void {\n    this.updateLinesAmount();\n\n    // once the debounceTime changes\n    // recreate the observable\n    this.debounce$.pipe(\n      switchMap(debounceTimeInterval =>  combineLatest([\n        this.value$.pipe(\n          distinctUntilChanged(),\n        ),\n        this.language$.pipe(\n          distinctUntilChanged()\n        ),\n        this.lastKeyTriggered$.pipe(\n          distinctUntilChanged()\n        )\n      ]).pipe(\n          debounceTime(debounceTimeInterval),\n        )\n      ),\n      takeUntil(this._destroyed$),\n    ).subscribe(async ([code, language, lastKeyEvent]) => {\n      this.showHighlighedCode$.next(false);\n\n      await this.highlightToPreTag(code, language, lastKeyEvent)\n\n      this.showHighlighedCode$.next(true);\n\n      // incase multiple enters scroll the textarea one off, scroll back up\n      // this.textarea.nativeElement.scrollTo(0,0);\n    });\n\n    this.value$.pipe(\n      takeUntil(this._destroyed$),\n      distinctUntilChanged(),\n    ).subscribe(value => {\n      this.value = value;\n      this.changed.emit(value);\n    });\n\n    this.highlightToPreTag('\\n', null, null);\n  }\n\n  ngOnDestroy(): void {\n    this._destroyed$.next();\n    this._destroyed$.complete();\n  }\n\n  onChange(value: string): void  {\n    this.value$.next(value);\n\n    this.cd.markForCheck();\n  }\n\n  private updateLinesAmount () {\n    if (!this.value) {\n      return;\n    }\n\n    const lines = this.value.split('\\n').length;\n\n    this.cssProps.updateElementVars({\n      '--lines-amount': lines\n    });\n  }\n\n  ngOnChanges ({ value, language, debounceTime }: SimpleChanges): void {\n    if (value) {\n      this.value$.next(value.currentValue);\n    }\n\n    if (language) {\n      this.language$.next(language.currentValue);\n    }\n\n    if (debounceTime) {\n      this.debounce$.next(debounceTime.currentValue);\n    }\n  }\n\n  onKeyDown (event: KeyboardEvent, textarea: HTMLTextAreaElement): void  {\n    if(this.allCharsRegex.exec(event.key) && !IGNORE_KEY_EVENTS.includes(event.key)){\n      this.showHighlighedCode$.next(false);\n    }\n\n    this.value$.next(textarea.value);\n\n    if (event.key === KEY_TAB) {\n      const handledTab = handleTab(\n        event,\n        textarea.value,\n        textarea.selectionStart,\n        textarea.selectionEnd,\n        this.useTabs,\n        this.spaceWidth\n      );\n\n      this.applyToTextarea(handledTab);\n\n      if (handledTab.textChanged) {\n        this.showHighlighedCode$.next(false);\n      }\n    }\n\n\n  }\n\n  onKeyUp (event: KeyboardEvent, value: string): void  {\n    this.value$.next(value);\n    this.lastKeyTriggered$.next(event);\n  }\n\n  private applyToTextarea(result: HandleTabResponse) {\n    if (result.textChanged) {\n      this.textarea.nativeElement.value =result.newValue;\n      this.textarea.nativeElement.selectionStart =result.newSelectionStart;\n      this.textarea.nativeElement.selectionEnd =result.newSelectionEnd;\n    }\n  }\n\n  private async highlightToPreTag(\n    codeToHighlight: string,\n    language: string,\n    lastKeyEvent: KeyboardEvent\n  ) {\n    if (!codeToHighlight) {\n       this.morphService.morphElement(this.highlightArea,\n      `<pre>\\n</pre>`, {\n        childrenOnly: true\n      });\n\n      return '';\n    }\n\n    const innerHighlighed = await this.prism.highlightCode(codeToHighlight, language);\n\n    let addedBeginNewLine = '', addedEndNewLine = '';\n\n    // somehow if the new html starts with a newline\n    // its not added to the element\n    if (innerHighlighed.startsWith('\\n')) {\n      addedBeginNewLine = '\\n';\n    }\n\n    if (innerHighlighed.endsWith('\\n')) {\n      addedEndNewLine = '\\n';\n    }\n\n    this.morphService.morphElement(this.highlightArea,\n      `<pre>${addedBeginNewLine}${innerHighlighed}${addedEndNewLine}</pre>`, {\n        childrenOnly: true\n      });\n\n    if (lastKeyEvent) {\n      this.textarea.nativeElement.blur();\n      this.textarea.nativeElement.focus();\n    }\n\n    return innerHighlighed;\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkeW5hbWljLXBvcnRhbC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Inject, Injectable, InjectionToken, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { MarkdownServiceOptions, MarkdownWorker, PrismServiceOptions, PrismWorker } from '@gewd/markdown/contracts';\nimport { MarkdownOptionsInjectorToken } from '@gewd/markdown/service';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Remote, wrap } from 'comlink';\n\nexport const PrismOptionsInjectorToken = new InjectionToken<PrismServiceOptions>('MarkdownOptionsInjectorToken');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HighlightService {\n  private workerProxy: Remote<PrismWorker>;\n\n  constructor(@Optional() @Inject(MarkdownOptionsInjectorToken)\n              readonly markdownOptions: MarkdownServiceOptions,\n              @Optional() @Inject(PrismOptionsInjectorToken)\n              readonly prismOptions: PrismServiceOptions,\n\n               @Inject(PLATFORM_ID) platformId: Object,\n              private ngZone: NgZone\n              ) {\n     if (isPlatformBrowser(platformId)) {\n       if (markdownOptions) {\n         const wrappedWorker = wrap<MarkdownWorker>(markdownOptions.getWorker());\n         wrappedWorker.init(markdownOptions.options);\n\n         this.workerProxy = wrappedWorker;\n       }\n\n       if (prismOptions) {\n         this.workerProxy  = wrap<PrismWorker>(prismOptions.getWorker());\n         this.workerProxy.initPrism(prismOptions.options);\n       }\n    }\n  }\n\n  public highlightCode (code: string, lang: string): Promise<string> {\n    if (!this.workerProxy) {\n      return;\n    }\n\n   return this.ngZone.runOutsideAngular(async () => {\n      // needed?\n      return await this.workerProxy.highlight(code, lang)\n    });\n  }\n}\n","export default \"<ng-container *ngIf=\\\"templateToShow$ | async as templateRef\\\"\\n              [ngTemplateOutlet]=\\\"templateRef\\\">\\n</ng-container>\\n<ng-container *ngIf=\\\"!(templateToShow$ | async)\\\">\\n  <ng-content></ng-content>\\n</ng-container>\\n\";","import { ElementRef, Injectable } from '@angular/core';\nimport { CssPropsService } from './css-props.service';\n\n@Injectable()\nexport class ElementCssService {\n  constructor (\n    private cssPropsService: CssPropsService,\n    private elementRef: ElementRef<HTMLElement>\n  ) { }\n\n  public updateElementVars(cssProps: any): void  {\n    this.cssPropsService.updateElementVars(this.elementRef.nativeElement, cssProps);\n  }\n}\n","import { Injectable, TemplateRef } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { filter, map, startWith } from 'rxjs/operators';\n\nexport const enum PortalSourceActionType {\n  Added,\n  Removed\n}\n\nexport class PortalSourceAction {\n  constructor (public type: PortalSourceActionType,\n               public key: string) {\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PortalHubService {\n  private templateSourceSubject = new Subject<PortalSourceAction>();\n  private templateSourceHub: { [key: string]: TemplateRef<any> } = {};\n\n  constructor () { }\n\n  public getTemplate$(key: string) {\n    return this.templateSourceSubject.pipe(\n      filter(a => a.key === key),\n      map(a => {\n        switch (a.type) {\n          case PortalSourceActionType.Added: {\n            return this.templateSourceHub[key];\n          }\n          case PortalSourceActionType.Removed: {\n            return null;\n          }\n        }\n      }),\n      startWith(this.templateSourceHub[key])\n    );\n  }\n\n  public registerTemplate (key: string, templateRef: TemplateRef<any>): void  {\n    if (this.templateSourceHub[key]) {\n      return;\n    }\n\n    this.templateSourceHub[key] = templateRef;\n    this.templateSourceSubject.next(new PortalSourceAction(PortalSourceActionType.Added, key));\n  }\n\n\n  public unregisterTemplate (key: string): void  {\n    if (!this.templateSourceHub[key]) {\n      return;\n    }\n\n    this.templateSourceHub[key] = null;\n    this.templateSourceSubject.next(new PortalSourceAction(PortalSourceActionType.Removed, key));\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  Injector, Input, OnChanges,\n  SimpleChanges, EventEmitter, OnDestroy,\n  Compiler, Output, ChangeDetectorRef\n} from '@angular/core';\nimport {takeUntil} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\nimport { DynamicLoaderRegistry } from '@gewd/lazy/registry';\nimport { InputMap, OutputMap } from '@gewd/lazy/contracts';\n\n@Component({\n  selector: 'gewd-lazy-module-component',\n  template: `\n    <ng-container #targetContainer></ng-container>\n    <ng-content *ngIf=\"!component || !moduleAlias\"></ng-content>\n    <ng-content *ngIf=\"componentLoading | async\"\n                select=\"[isLoading]\"></ng-content>\n    <span *ngIf=\"showError && error\" class=\"error\">{{error}}</span>\n  `,\n  styles: [`\n    .error {\n      color: red;\n    }\n  `],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LazyModuleComponent implements OnChanges, OnDestroy {\n\n  @Input()\n  public moduleAlias: string;\n\n  @Input()\n  public component: string;\n\n  @Input()\n  public componentInputs: InputMap;\n\n  @Input()\n  public componentOutputs: OutputMap;\n\n  @ViewChild('targetContainer', {read: ViewContainerRef, static: true})\n  public targetContainer: ViewContainerRef;\n\n  @Output()\n  public componentCreated = new EventEmitter();\n\n  @Output()\n  public componentLoading = new EventEmitter();\n\n  @Input()\n  public showError = true;\n\n  public error: string;\n  private componentInstance = null;\n\n  private unsubForOutputs$ = new Subject();\n  private alreadySettingComponent = false;\n\n  constructor (private resolver: ComponentFactoryResolver,\n               private angularCompiler: Compiler,\n               private injector: Injector,\n               private cd: ChangeDetectorRef) {\n\n\n  }\n\n  async setComponent () {\n    if (!this.moduleAlias || !this.component || this.alreadySettingComponent) {\n      return;\n    }\n\n    this.error = '';\n\n    this.alreadySettingComponent = true;\n\n    const moduleInDictionary = DynamicLoaderRegistry.LazyModuleComponents[this.moduleAlias];\n\n    if (!moduleInDictionary) {\n      this.error = `Module ${this.moduleAlias} not registered`;\n      this.cd.markForCheck();\n      return;\n    }\n\n\n    this.componentLoading.emit(true);\n\n    if (!moduleInDictionary.loadedModule) {\n      // load and cache\n      moduleInDictionary.loadedModule = moduleInDictionary.load\n        .getValue()\n        .then(importedModule => {\n          return this.angularCompiler.compileModuleAndAllComponentsAsync(importedModule);\n        })\n        .then(factory => {\n          return {\n            ngModule: factory.ngModuleFactory.create(this.injector),\n            componentFactories: factory.componentFactories\n          };\n        });\n    }\n\n    const moduleFactory = await moduleInDictionary.loadedModule;\n\n    if (!moduleFactory.ngModule.instance.getComponents) {\n      this.error = `Module ${this.moduleAlias} does not have a getComponents-Method`;\n      this.cd.markForCheck();\n      return;\n    }\n\n    const components = moduleFactory.ngModule.instance.getComponents();\n\n    const componentInfo = components.find(cf => cf.name === this.component);\n\n    if (!componentInfo) {\n      this.error = `Component '${this.component}' does not exist in the 'getComponents'-Method`;\n      this.cd.markForCheck();\n      return;\n    }\n\n    const componentType = componentInfo.componentType;\n\n    const componentFactory = moduleFactory.ngModule.componentFactoryResolver.resolveComponentFactory(componentType);\n\n    // only have one dynamic component render\n    this.targetContainer.clear();\n\n    const componentRef = this.targetContainer.createComponent(componentFactory, 0, this.injector);\n    componentRef.changeDetectorRef.markForCheck();\n\n    this.componentLoading.emit(false);\n    this.componentCreated.emit(componentRef.instance);\n    this.componentInstance = componentRef.instance;\n    this.setInputs();\n    this.setOutputs();\n\n    this.alreadySettingComponent = false;\n    this.cd.detectChanges();\n  }\n\n  ngOnChanges (changes: SimpleChanges): void {\n    if (this.changedAndDifferent(changes, 'component')) {\n      // console.info('setting component because of component');\n      this.setComponent();\n    }\n    if (this.changedAndDifferent(changes, 'moduleAlias')) {\n      // console.info('setting component because of moduleAlias');\n      this.setComponent();\n    }\n    if (changes['componentInputs']) {\n      this.setInputs();\n    }\n    if (changes['componentOutputs']) {\n      this.setOutputs();\n    }\n  }\n\n  ngOnDestroy () {\n    this.unsubOutputs();\n  }\n\n  private changedAndDifferent(changes: SimpleChanges, name: string) {\n    const change = changes[name];\n\n    if (change && change.currentValue !== change.previousValue) {\n      return true;\n    }\n\n    return false;\n  }\n\n  private setInputs () {\n    if (this.componentInstance && this.componentInputs) {\n      const inputs = Object.keys(this.componentInputs);\n\n      for (const inputKey of inputs) {\n        this.componentInstance[inputKey] = this.componentInputs[inputKey];\n      }\n    }\n  }\n\n  private unsubOutputs () {\n    this.unsubForOutputs$.next();\n  }\n\n  private setOutputs () {\n    this.unsubOutputs();\n\n    if (this.componentInstance && this.componentOutputs) {\n      const outputs = Object.keys(this.componentOutputs);\n\n      for (const outputKey of outputs) {\n        if (this.componentInstance[outputKey]) {\n          const emitter = this.componentInstance[outputKey] as EventEmitter<any>;\n          emitter.pipe(\n            takeUntil(this.unsubForOutputs$),\n          ).subscribe(this.componentOutputs[outputKey]);\n        }\n      }\n    }\n  }\n}\n","import { ErrorHandler, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgErrorComponent } from './ng-error.component';\nimport { ErrorOverlayComponent } from './error-overlay/error-overlay.component';\nimport { ErrorHandlerService, NG_ERROR_CONFIG_TOKEN } from './error-handler.service';\nimport { BootstrapComponentConfig, BootstrapComponentModule } from '@gewd/ng-utils/bootstrap-component';\nimport { SimplePagerModule } from '@gewd/ng-utils/components';\nimport { DynamicPortalModule } from '@gewd/ng-utils/dynamic-portal';\n\n@NgModule({\n  declarations: [NgErrorComponent, ErrorOverlayComponent],\n  entryComponents: [NgErrorComponent],\n  imports: [\n    CommonModule,\n    BootstrapComponentModule.component({\n      elementName: 'ng-error',\n      component: NgErrorComponent\n    }),\n    SimplePagerModule,\n    DynamicPortalModule\n  ],\n  providers: [\n    ErrorHandlerService,\n    {provide: ErrorHandler, useExisting: ErrorHandlerService},\n  ]\n})\nexport class NgErrorOverlayModule {\n  static config (useValue: BootstrapComponentConfig): ModuleWithProviders<BootstrapComponentModule> {\n    return {\n      ngModule: NgErrorOverlayModule,\n      providers: [\n        { provide: NG_ERROR_CONFIG_TOKEN, useValue }\n      ]\n    };\n  }\n}\n","export * from './public_api';\n","export * from './public_api';\n","export * from './public_api';\n","export * from './bootstrap-component.module';\n","export interface HandleTabResponse {\n  textChanged: boolean;\n  newValue: string;\n  newSelectionStart: number;\n  newSelectionEnd: number;\n}\n\nexport function handleTab (event: KeyboardEvent,\n                           currentValue: string,\n                           startSelection: number,\n                           endSelection: number,\n                           useTabs = false,\n                           spaceLength = 2)\n  : HandleTabResponse {\n    const result: HandleTabResponse = {\n      textChanged: false,\n      newValue: '',\n      newSelectionStart: 0,\n      newSelectionEnd: 0\n    };\n\n    if (event.key !== \"Tab\") {\n      return result;\n    }\n\n    const backwards = event.shiftKey;\n\n    const valueToWork = useTabs\n      ? '\\t'\n      : ''.padEnd(spaceLength, ' ');\n\n    const textValueUntilStart = currentValue.substr(0, startSelection);\n    const textValueFromStart = currentValue.substr(endSelection);\n\n\n    if (backwards) {\n      if (textValueUntilStart.endsWith(valueToWork)) {\n        result.newValue = textValueUntilStart.substr(0, startSelection - valueToWork.length) + textValueFromStart;\n        result.newSelectionStart = result.newSelectionEnd = startSelection - valueToWork.length;\n\n        result.textChanged = true;\n      }\n    } else {\n      result.newValue = textValueUntilStart + valueToWork + textValueFromStart;\n      result.newSelectionStart = result.newSelectionEnd = startSelection + valueToWork.length;\n\n      result.textChanged = true;\n    }\n\n    event.preventDefault();\n\n    return result;\n}\n","export default \":host {\\n  color: #e8e8e8;\\n  font-family: Menlo, Consolas, monospace;\\n  font-size: large;\\n  line-height: 1.2;\\n  white-space: pre-wrap;\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n}\\n\\n.error {\\n  color: red;\\n}\\n\\n.stack-block {\\n  flex: 1;\\n  display: flex;\\n  flex-direction: column;\\n  overflow-y: auto;\\n}\\n\\n.stack-table {\\n  margin-top: 2rem;\\n  width: 100%;\\n}\\n\\n.align-left {\\n  text-align: left;\\n}\\n\\n.align-right {\\n  text-align: right;\\n}\\n\\n.row.even {\\n  background: #AAAAAA40;\\n}\\n\\n.row.odd {\\n  background: #CCCCCC40;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL2Vycm9yLW92ZXJsYXkuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUE7RUFDRSxjQUFBO0VBQ0EsdUNBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0EscUJBQUE7RUFDQSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxZQUFBO0FBREY7O0FBSUE7RUFDRSxVQUFBO0FBREY7O0FBSUE7RUFDRSxPQUFBO0VBQ0EsYUFBQTtFQUNBLHNCQUFBO0VBQ0EsZ0JBQUE7QUFERjs7QUFJQTtFQUNFLGdCQXpCUTtFQTBCUixXQUFBO0FBREY7O0FBR0E7RUFDRSxnQkFBQTtBQUFGOztBQUdBO0VBQ0UsaUJBQUE7QUFBRjs7QUFJRTtFQUFRLHFCQUFBO0FBQVY7O0FBQ0U7RUFBTyxxQkFBQTtBQUVUIiwiZmlsZSI6ImVycm9yLW92ZXJsYXkuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIkcGFkZGluZzogMnJlbTtcblxuOmhvc3Qge1xuICBjb2xvcjogcmdiKDIzMiwgMjMyLCAyMzIpO1xuICBmb250LWZhbWlseTogTWVubG8sIENvbnNvbGFzLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogbGFyZ2U7XG4gIGxpbmUtaGVpZ2h0OiAxLjI7XG4gIHdoaXRlLXNwYWNlOiBwcmUtd3JhcDtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG4uZXJyb3Ige1xuICBjb2xvcjogcmVkO1xufVxuXG4uc3RhY2stYmxvY2sge1xuICBmbGV4OiAxO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBvdmVyZmxvdy15OiBhdXRvO1xufVxuXG4uc3RhY2stdGFibGUge1xuICBtYXJnaW4tdG9wOiAkcGFkZGluZztcbiAgd2lkdGg6IDEwMCU7XG59XG4uYWxpZ24tbGVmdCB7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG59XG5cbi5hbGlnbi1yaWdodCB7XG4gIHRleHQtYWxpZ246IHJpZ2h0O1xufVxuXG4ucm93IHtcbiAgJi5ldmVuIHtiYWNrZ3JvdW5kOiAjQUFBQUFBNDB9XG4gICYub2RkIHtiYWNrZ3JvdW5kOiAjQ0NDQ0NDNDB9XG59XG4iXX0= */\";","import { Inject, Injectable, NgZone } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { updateCssProps } from './update-css-props';\nimport { updateDynamicStyle } from './update-dynamic-style';\n\n/** @dynamic - allows Document in ngc build */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CssPropsService {\n  constructor (\n    @Inject(DOCUMENT) private document: Document,\n    private ngZone: NgZone\n  ) { }\n\n  public updateCustomCss(styleId: string, customCss: string): void  {\n    this.ngZone.runOutsideAngular(() => {\n      updateDynamicStyle(this.document, styleId, customCss);\n    });\n  }\n\n  public updateDocumentVars(cssProps: any): void  {\n    this.ngZone.runOutsideAngular(() => {\n      updateCssProps(this.document.body, cssProps);\n    });\n  }\n\n  public updateElementVars(element: HTMLElement, cssProps: any): void  {\n    this.ngZone.runOutsideAngular(() => {\n      updateCssProps(element, cssProps);\n    });\n  }\n}\n","export default \"<div class=\\\"above\\\">\\n  <ng-content select=\\\"[markdown__above]\\\"></ng-content>\\n</div>\\n<div [innerHTML]=\\\"parsedHtml$ | async\\\"></div>\\n<div class=\\\"below\\\">\\n  <ng-content select=\\\"[markdown__below]\\\"></ng-content>\\n</div>\\n\";","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\n\nimport { Remote, wrap } from 'comlink';\nimport { DEFAULT_MERMAID_OPTIONS, MarkdownServiceOptions, MarkdownWorker } from '@gewd/markdown/contracts';\nimport { MarkdownCacheService } from './markdown-cache.service';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { MarkdownOptionsInjectorToken } from './injection-token';\nimport { simpleHash } from '@gewd/markdown/utils';\n\n\nconst compiledRegex = /<div class=\"mermaid\">([\\s\\S]*?)<\\/div>/mg;\n\nlet renderId = 0;\n\n/** @dynamic - allows Document in ngc build */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarkdownService {\n  private canTriggerMermaidLoad = false;\n  private mermaidAddedToPage = false;\n  private workerProxy: Remote<MarkdownWorker>;\n  private mermaidCacheKey = '';\n  private mermaidConfig = Object.assign({},\n    DEFAULT_MERMAID_OPTIONS,\n    this.markdownOptions.mermaidOptions);\n\n\n  constructor (@Inject(MarkdownOptionsInjectorToken)\n               readonly markdownOptions: MarkdownServiceOptions,\n               private readonly cache: MarkdownCacheService,\n               @Inject(DOCUMENT)\n               private document: Document,\n               @Inject(PLATFORM_ID) platformId: Object\n  ) {\n    if (isPlatformBrowser(platformId)) {\n      this.workerProxy = wrap<MarkdownWorker>(markdownOptions.getWorker());\n      if (markdownOptions.options) {\n        this.workerProxy.init(markdownOptions.options);\n      }\n    }\n    if (markdownOptions.mermaidPath) {\n      this.canTriggerMermaidLoad = true;\n      this.mermaidCacheKey = `mermaid_${this.mermaidConfig.theme}_${simpleHash(this.mermaidConfig.themeCSS) }`\n    }\n  }\n\n  public async compileMarkdown (str: string, triggerMermaid = false): Promise<string> {\n    if (!this.workerProxy) {\n      return;\n    }\n\n    let parsedMarkdown = await this.workerProxy.compile(str);\n\n    if (triggerMermaid && parsedMarkdown.match(/class=\"mermaid\"/)) {\n      await this.triggerMermaidLoadScript();\n\n      const mermaidInstance = (window as any).mermaid;\n      if (mermaidInstance) {\n        const matched = parsedMarkdown.match(compiledRegex);\n\n        for (const mermaid of matched) {\n          const innerContent = this.cleanUpMermaidRaw(mermaid);\n\n          let rendered = '';\n\n          const cached = await this.cache.getCachedPart(this.mermaidCacheKey, innerContent);\n\n          if (!!cached) {\n            rendered = cached;\n          } else {\n            let errorStr = \"\";\n            try {\n              mermaidInstance.parse(innerContent);\n            } catch (e) {\n              errorStr = e.str;\n            }\n\n            if (!errorStr) {\n              rendered = mermaidInstance.render(`sub${renderId++}`, innerContent,\n                () => {\n                });\n              this.cache.saveCachedPart(this.mermaidCacheKey, innerContent, rendered);\n            } else {\n              rendered = `<pre>${errorStr}\\n${innerContent}</pre>`;\n            }\n          }\n\n          parsedMarkdown = parsedMarkdown.replace(mermaid, `<pre><code class=\"mermaid\">${rendered}</code></pre>`);\n        }\n      }\n    }\n\n    return parsedMarkdown;\n  }\n\n  private cleanUpMermaidRaw (mermaidRaw) {\n    return mermaidRaw\n      .replace(/&gt;/mg, '>')\n      .replace(/&lt;/mg, '<')\n      .replace('<div class=\"mermaid\">', '')\n      .replace('</div>', '');\n  }\n\n  private triggerMermaidLoadScript () {\n    if (!this.canTriggerMermaidLoad) {\n      return Promise.resolve();\n    }\n\n    if (this.canTriggerMermaidLoad && !this.mermaidAddedToPage) {\n      this.mermaidAddedToPage = true;\n      const _mermaidNode = this.document.createElement('div');\n      _mermaidNode.hidden = true;\n\n      this.document.body.appendChild(_mermaidNode);\n\n      return new Promise((resolve, reject) => {\n\n        const scriptTag = this.document.createElement('script');\n        scriptTag.src = this.markdownOptions.mermaidPath;\n        // trigger mermaid init\n        scriptTag.onload = () => {\n\n          const mermaid = (window as any).mermaid;\n          mermaid.initialize(this.mermaidConfig);\n\n          resolve();\n\n          mermaid.parseError = function(err) {\n            console.error('MarkdownService, Mermaid: ', err);\n          };\n        };\n\n        this.document.body.appendChild(scriptTag);\n      });\n    }\n\n    if (this.canTriggerMermaidLoad && this.mermaidAddedToPage) {\n      const mermaidInstance = (window as any).mermaid;\n      if (mermaidInstance) {\n        return Promise.resolve();\n      }\n\n      return Promise.reject();\n    }\n  }\n}\n","export {registerIcons} from \"./register_icons\";\nexport * from './register_icons.module';\n","export * from './public_api';\n","import { Component, Input, OnInit } from '@angular/core';\nimport { ErrorInterface } from '../error-handler.service';\nimport ErrorStackParser from 'error-stack-parser';\n\n@Component({\n  selector: 'error-overlay',\n  templateUrl: './error-overlay.component.html',\n  styleUrls: ['./error-overlay.component.scss']\n})\nexport class ErrorOverlayComponent implements OnInit {\n\n  @Input()\n  error: ErrorInterface;\n\n  public errorStack: any[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.errorStack = ErrorStackParser.parse(this.error);\n  }\n\n}\n","export default \"<span class=\\\"error-info\\\">\\n<span class=\\\"error error-name\\\">{{error.name}} <br/></span>\\nError Message: <span class=\\\"error\\\">{{error.message}}</span>\\n</span>\\n\\n\\n<div class=\\\"stack-block\\\" *ngIf=\\\"error.stack\\\">\\nStack:\\n<table class=\\\"stack-table\\\">\\n  <tr>\\n    <th class=\\\"align-left\\\">Function Name</th>\\n    <th class=\\\"align-right\\\">Line Number</th>\\n    <th class=\\\"align-right\\\">Column Number</th>\\n  </tr>\\n  <ng-container *ngFor=\\\"let stack of errorStack; let odd = odd; let even = even;\\\">\\n    <tr class=\\\"row\\\"\\n        [class.odd]=\\\"odd\\\"\\n        [class.even]=\\\"even\\\"\\n    >\\n      <td>{{stack.functionName}}</td>\\n      <td class=\\\"align-right\\\">{{stack.lineNumber}}</td>\\n      <td class=\\\"align-right\\\">{{stack.columnNumber}}</td>\\n    </tr>\\n    <tr>\\n      <td colspan=\\\"3\\\"\\n          class=\\\"row\\\"\\n          [class.odd]=\\\"odd\\\"\\n          [class.even]=\\\"even\\\"\\n      >\\n        {{stack.fileName}}</td>\\n    </tr>\\n  </ng-container>\\n</table>\\n</div>\\n\";","export default \"<div class=\\\"editor\\\"\\n     [class.visible-highlight]=\\\"showHighlighedCode$ | async\\\"\\n     [class.editor__no-debounce]=\\\"debounceTime === 0\\\">\\n\\n  <textarea #textarea [value]=\\\"value\\\"\\n            (change)=\\\"onChange(textarea.value)\\\"\\n            (keydown)=\\\"onKeyDown($event, textarea)\\\"\\n            (keyup)=\\\"onKeyUp($event, textarea.value)\\\"\\n            (focus)=\\\"focussed$.next(true)\\\"\\n            (blur)=\\\"focussed$.next(false)\\\"\\n            spellcheck=\\\"false\\\"\\n  ></textarea>\\n  <pre class=\\\"highlight-area\\\" #highlightArea></pre>\\n</div>\\n\\n\";","export function updateCssProps (\n  element: HTMLElement,\n  cssProps: any\n): void  {\n  const { style } = element;\n  for (const [k, v] of Object.entries(cssProps)) {\n    style.setProperty(k, v.toString(), 'important');\n  }\n}\n","export * from './morphdom.module';\nexport * from './morphdom.directive';\nexport * from './morphdom.service';\n","import {Inject, InjectionToken, ModuleWithProviders, NgModule} from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LazyComponent } from './lazy.component';\nimport { LazyModuleComponent } from './lazy-module.component';\nimport {DynamicLoaderRegistry, LazyModuleComponentConfig} from \"@gewd/lazy/registry\";\n\nexport interface RegisterLazyLoaderModuleEntry {\n  moduleName: string,\n  moduleConfig: LazyModuleComponentConfig\n}\n\nexport const REGISTORY_LAZY_LOADED_MODULE_TOKEN = new InjectionToken<RegisterLazyLoaderModuleEntry>(\n  '@gewd/lazy-loader/LazyModuleComponentConfig'\n);\n\n\n@NgModule({\n  declarations: [\n    LazyComponent,\n    LazyModuleComponent\n  ],\n  exports: [\n    LazyComponent,\n    LazyModuleComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n\n})\nexport class GewdLazyLoaderModule {\n  static withLazy (entries: RegisterLazyLoaderModuleEntry[]): ModuleWithProviders<GewdLazyLoaderModule> {\n    const providers = entries.map(useValue => {\n      return {\n        provide: REGISTORY_LAZY_LOADED_MODULE_TOKEN,\n        useValue,\n        multi: true\n      }\n    });\n\n    return {\n      ngModule: GewdLazyLoaderModule,\n      providers\n    };\n  }\n\n  constructor (@Inject(REGISTORY_LAZY_LOADED_MODULE_TOKEN)\n               registerLazyLoads: RegisterLazyLoaderModuleEntry[]) {\n    for (const lazyInfo of registerLazyLoads) {\n      DynamicLoaderRegistry.RegisterLazyModuleComponent(lazyInfo.moduleName, lazyInfo.moduleConfig);\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJleGFtcGxlLXBhbmVsLmNvbXBvbmVudC5jc3MifQ== */\";","module.exports = __webpack_public_path__ + \"0-es2015.worker.js\"","import { Component, ContentChild, Input, TemplateRef } from '@angular/core';\n\n@Component({\n  selector: 'simple-pager',\n  templateUrl: './simple-pager.component.html',\n  styleUrls: ['./simple-pager.component.scss']\n})\nexport class SimplePagerComponent {\n\n  @ContentChild(TemplateRef)\n  templateRef: TemplateRef<any>;\n\n  @Input()\n  items: any[];\n\n  public position = 0;\n\n  constructor() { }\n\n  selectPrev (): void  {\n    if (this.position === 0) {\n      return;\n    }\n\n    this.position--;\n  }\n\n  selectNext (): void  {\n    if (this.position === (this.items.length - 1)) {\n      return;\n    }\n\n    this.position++;\n  }\n}\n","import { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\n\nexport interface RegistryIconsPair {\n  pathToIcons: string,\n  iconArray: string[]\n}\n\nexport function registerIcons(\n  iconRegistry: MatIconRegistry,\n  sanitizer: DomSanitizer,\n  iconPair: RegistryIconsPair\n): void  {\n  for (const icon of iconPair.iconArray) {\n    iconRegistry.addSvgIcon(icon, sanitizer.bypassSecurityTrustResourceUrl(\n      `${iconPair.pathToIcons}/${icon}.svg`\n    ));\n  }\n}\n","export default \":host ::ng-deep foreignObject {\\n  overflow: visible;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3JlbmRlci1tYXJrZG93bi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFRTtFQUFnQixpQkFBQTtBQUFsQiIsImZpbGUiOiJyZW5kZXItbWFya2Rvd24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCA6Om5nLWRlZXAge1xuICAvLyBmaXggbWVybWFpZCBvdmVyZmxvdyA6KVxuICBmb3JlaWduT2JqZWN0IHsgb3ZlcmZsb3c6IHZpc2libGU7IH1cbn1cbiJdfQ== */\";","export * from './public_api';\n","export default \"<div class=\\\"navigation-row flex\\\">\\n  <div class=\\\"navigation-row-left\\\">\\n    <ng-content select=\\\"[simplePagerTopLeft]\\\"></ng-content>\\n  </div>\\n\\n  <div class=\\\"navigation-row-panel flex\\\"\\n       [class.only-one]=\\\"items?.length === 1\\\">\\n    <span class=\\\"left-arrow\\\"\\n          [class.disabled]=\\\"position === 0\\\"\\n          (click)=\\\"selectPrev()\\\">\\n      <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n        <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n      </svg>\\n    </span>\\n    <span class=\\\"right-arrow\\\"\\n          [class.disabled]=\\\"position === items?.length - 1\\\"\\n          (click)=\\\"selectNext()\\\">\\n      <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" height=\\\"24\\\" viewBox=\\\"0 0 24 24\\\" width=\\\"24\\\">\\n        <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n      </svg>\\n    </span>\\n\\n    <span class=\\\"position-label\\\">{{position + 1}} of {{items?.length}}</span>\\n\\n  </div>\\n  <div class=\\\"navigation-row-right\\\">\\n    <ng-content select=\\\"[simplePagerTopRight]\\\"></ng-content>\\n  </div>\\n</div>\\n\\n<div class=\\\"slot\\\">\\n   <ng-template [ngTemplateOutlet]=\\\"templateRef\\\" [ngTemplateOutletContext]=\\\"{$implicit: items[position]}\\\"></ng-template>\\n</div>\\n\";","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {DynamicPortalComponent} from './dynamic-portal/dynamic-portal.component';\nimport {PortalSourceDirective} from './portal-source.directive';\n\n@NgModule({\n  declarations: [DynamicPortalComponent, PortalSourceDirective],\n  exports: [\n    DynamicPortalComponent,\n    PortalSourceDirective\n  ],\n  imports: [\n    CommonModule\n  ],\n  providers: []\n})\nexport class DynamicPortalModule {\n}\n","import { ErrorHandler, Inject, Injectable, InjectionToken, Optional } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\nexport interface ErrorInterface {\n  name: string;\n  message: string;\n  stack: string;\n}\n\nexport interface NgErrorConfig {\n  zIndex: number;\n  ignoreErrors: string[];\n}\n\nconst DEFAULT_CONFIG: NgErrorConfig = {\n  zIndex: 10000,\n  ignoreErrors: []\n};\n\nexport const NG_ERROR_CONFIG_TOKEN = new InjectionToken<NgErrorConfig>('@gewd/ng-utils/NgErrorConfig');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorHandlerService implements ErrorHandler {\n\n  public error$ = new BehaviorSubject<ErrorInterface>(null);\n\n  constructor(\n    @Optional() @Inject(NG_ERROR_CONFIG_TOKEN)\n    public readonly config: NgErrorConfig\n  ) {\n    this.config = Object.assign({}, DEFAULT_CONFIG, config);\n\n    window.addEventListener('error', ev => {\n      this.handleError(ev.error);\n    });\n  }\n\n  handleError (error: Error): void {\n    if (this.config.ignoreErrors.includes(error.name)) {\n      return;\n    }\n\n    this.error$.next({\n      name: error.name,\n      message: error.message,\n      stack: error.stack\n    });\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { MarkdownServiceOptions } from '@gewd/markdown/contracts';\n\nexport const MarkdownOptionsInjectorToken = new InjectionToken<MarkdownServiceOptions>('MarkdownOptionsInjectorToken');\n","export * from './public_api';\n","export * from './public_api';\n","import { ChangeDetectorRef, Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n// todo fix nx enforce module boundaries\nimport { LazyModuleComponent } from '@gewd/lazy/loader';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder } from '@angular/forms';\n\n// TODO Splitup each panel functions/vars into its own component\n\n@Component({\n  selector: 'gewd-utils-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  markDownReadmeMD$ = this.http.get('./assets/readme/markdown/README.md', {\n    responseType: 'text'\n  });\n\n  ngErrorOverlay$ = this.http.get('./assets/ng-error-overlay.md', {\n    responseType: 'text'\n  });\n\n  matUtilsReadmeMD$ = this.http.get('./assets/readme/mat-utils/README.md', {\n    responseType: 'text'\n  });\n\n\n  public currentPrismExample: string;\n\n  public editorLanguage$ = new BehaviorSubject('');\n  public editorExample$ = new BehaviorSubject('');\n\n  aForm =  new FormBuilder().group({'editor': ''});\n\n  constructor (private cd: ChangeDetectorRef,\n               private http: HttpClient) {\n  }\n\n  setLazyPortalModuleComp (lazyModuleComponent: LazyModuleComponent): void  {\n    lazyModuleComponent.moduleAlias = 'portal-module';\n    lazyModuleComponent.component = 'PortalModuleComp';\n    lazyModuleComponent.setComponent();\n  }\n\n  makeError (): void  {\n    let errorSource: any;\n\n    errorSource.subString();\n  }\n\n  updateValueChanged ($event: string): void  {\n    this.currentPrismExample = $event;\n    switch($event ) {\n      case 'ts_example':\n      {\n        this.editorLanguage$.next('ts');\n\n        this.editorExample$.next(`\nimport { DynamicLoaderRegistry } from '@gewd/lazy/registry';\nimport { Lazy } from '@gewd/lazy/utils';\n\nDynamicLoaderRegistry.LazyComponents = {\n  'test-comp': new Lazy<any>(() => import('./lazy-wrapper/test-comp'))\n};\n\nDynamicLoaderRegistry.LazyModuleComponents = {\n\n  'test-module': {\n    load: new Lazy<any>(\n      () => import(/* webpackChunkName: \"lazy-test-module\" */ './lazy-wrapper/test-module-comp')\n      .then(({TestModule}) => TestModule)\n    )\n  },\n  'portal-module': {\n    load: new Lazy<any>(\n      () => import(/* webpackChunkName: \"lazy-portal-module\" */ './lazy-wrapper/lazy-portal-source')\n        .then(({PortalModule}) => PortalModule)\n    )\n  },\n};\n        `.trim())\n        break;\n      }\n      case 'readme_md': {\n        this.editorLanguage$.next('markdown');\n\n        this.markDownReadmeMD$.pipe(\n          take(1)\n        ).subscribe(value => {\n          this.editorExample$.next(value);\n        })\n\n        break;\n      }\n      default: {\n        this.editorExample$.next('');\n\n        break;\n      }\n    }\n  }\n\n  openedEditorPanel (): void  {\n    if (!this.currentPrismExample) {\n      this.updateValueChanged('empty');\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MarkdownCacheService {\n  public getCached(rawMarkdown: string): Promise<string> {\n    return Promise.resolve('');\n  }\n\n  public saveCached(rawMarkdown: string, renderedMarkdown: string): void  {\n\n  }\n\n  public getCachedPart(type: string, raw: string): Promise<string> {\n    return Promise.resolve('');\n  }\n\n  public saveCachedPart(type: string, raw: string, rendered: string): void  {\n\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CustomFormControlComponent } from './custom-form-control.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [CustomFormControlComponent],\n  exports: [\n    CustomFormControlComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class CustomFormControlModule { }\n","export * from './public_api';\n","import {\n  Component,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Self,\n  SimpleChanges\n} from '@angular/core';\nimport { ControlValueAccessor, FormBuilder, NgControl } from '@angular/forms';\nimport { MatFormField, MatFormFieldControl } from '@angular/material/form-field';\nimport { Observable, Subject } from 'rxjs';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\n@Component({\n  selector: 'gewd-custom-form-control',\n  template: `<ng-content></ng-content>`,\n  providers: [\n    { provide: MatFormFieldControl, useExisting: CustomFormControlComponent }\n  ]\n})\nexport class CustomFormControlComponent implements OnInit, ControlValueAccessor, MatFormFieldControl<any>, OnDestroy, OnChanges {\n  get value(): any {\n    return this._value;\n  }\n\n  @Input()\n  set value(value: any) {\n    this._value = value;\n    this.stateChangeSubject.next();\n    if (this.onChange) {\n      this.onChange(value);\n    }\n  }\n\n  @Input('aria-describedby')\n  userAriaDescribedBy: string;\n\n  @Input()\n  placeholder: string;\n\n  @Input()\n  required: boolean;\n\n  @Input()\n  disabled: boolean;\n\n  private _value: any;\n\n  @Input()\n  focused: boolean;\n\n  get errorState(): boolean {\n    return false;\n  }\n\n  onChange = (_: any) => {\n  };\n  onTouched = () => {\n  };\n\n  get empty() {\n    return typeof this.value === 'number' ? false : !this.value;\n  }\n\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n\n\n  constructor(\n    formBuilder: FormBuilder,\n    private _focusMonitor: FocusMonitor,\n    private _elementRef: ElementRef<HTMLElement>,\n    @Optional() public _formField: MatFormField,\n    @Optional() @Self() public ngControl: NgControl) {\n\n    if (this.ngControl !== null) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  setDescribedByIds(ids: string[]) {\n    const controlElement = this._elementRef.nativeElement;\n    controlElement.setAttribute('aria-describedby', ids.join(' '));\n  }\n\n  onContainerClick() {\n\n  }\n\n  writeValue(val: any): void {\n    this._value = val;\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  readonly autofilled: boolean;\n  readonly controlType: string;\n  readonly id: string;\n  readonly stateChangeSubject = new Subject<void>();\n  readonly stateChanges: Observable<void> = this.stateChangeSubject;\n\n\n  ngOnChanges({value}: SimpleChanges): void {\n    if (value && this.onChange) {\n      this.onChange(value.currentValue);\n      this.stateChangeSubject.next();\n    }\n  }\n}\n","export * from './lazy';\nexport * from './simple-hash';\n","export default \":host {\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.left-arrow, .right-arrow {\\n  --arrow-color: white;\\n}\\n\\n.left-arrow svg path, .right-arrow svg path {\\n  fill: var(--arrow-color);\\n}\\n\\n.left-arrow:hover:not(.disabled), .right-arrow:hover:not(.disabled) {\\n  cursor: pointer;\\n}\\n\\n.left-arrow.disabled, .right-arrow.disabled {\\n  --arrow-color: gray;\\n}\\n\\n.slot {\\n  position: relative;\\n  flex: 1;\\n  overflow-y: auto;\\n}\\n\\n.flex {\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n}\\n\\n.position-label {\\n  margin-left: 1rem;\\n  margin-right: 1rem;\\n}\\n\\n.navigation-row-panel {\\n  flex: 1;\\n  justify-content: flex-end;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NpbXBsZS1wYWdlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxzQkFBQTtBQUNGOztBQUVBO0VBQ0Usb0JBQUE7QUFDRjs7QUFDRTtFQUNFLHdCQUFBO0FBQ0o7O0FBRUU7RUFDRSxlQUFBO0FBQUo7O0FBR0U7RUFDRSxtQkFBQTtBQURKOztBQUtBO0VBQ0Usa0JBQUE7RUFDQSxPQUFBO0VBQ0EsZ0JBQUE7QUFGRjs7QUFLQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLG1CQUFBO0FBRkY7O0FBS0E7RUFDRSxpQkFBQTtFQUNBLGtCQUFBO0FBRkY7O0FBS0E7RUFDRSxPQUFBO0VBQ0EseUJBQUE7QUFGRiIsImZpbGUiOiJzaW1wbGUtcGFnZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG5cbi5sZWZ0LWFycm93LCAucmlnaHQtYXJyb3cge1xuICAtLWFycm93LWNvbG9yOiB3aGl0ZTtcblxuICBzdmcgcGF0aCB7XG4gICAgZmlsbDogdmFyKC0tYXJyb3ctY29sb3IpO1xuICB9XG5cbiAgJjpob3Zlcjpub3QoLmRpc2FibGVkKSB7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xuICB9XG5cbiAgJi5kaXNhYmxlZCB7XG4gICAgLS1hcnJvdy1jb2xvcjogZ3JheTtcbiAgfVxufVxuXG4uc2xvdCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZmxleDogMTtcbiAgb3ZlcmZsb3cteTogYXV0bztcbn1cblxuLmZsZXgge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuXG4ucG9zaXRpb24tbGFiZWwge1xuICBtYXJnaW4tbGVmdDogMXJlbTtcbiAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xufVxuXG4ubmF2aWdhdGlvbi1yb3ctcGFuZWwge1xuICBmbGV4OiAxO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGZsZXgtZW5kO1xufVxuIl19 */\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MorphdomDirective } from './morphdom.directive';\n\n\n@NgModule({\n  declarations: [MorphdomDirective],\n  exports: [\n    MorphdomDirective\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class MorphdomModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HighlightEditorComponent } from './highlight-editor.component';\nimport { CssPropsModule } from '@gewd/ng-utils/css-props';\nimport { MorphdomModule } from '@gewd/ng-utils/morphdom';\n\n@NgModule({\n  declarations: [HighlightEditorComponent],\n  exports: [\n    HighlightEditorComponent\n  ],\n  imports: [\n    CommonModule,\n    CssPropsModule,\n    MorphdomModule\n  ]\n})\nexport class HighlightEditorModule { }\n","export class Lazy<T> {\n  private cachedPromise: Promise<T>;\n\n  static create<T>(loader: () => Promise<T>): Lazy<T> {\n    return new Lazy<T>(loader);\n  }\n\n  constructor (private loader: () => Promise<T>) {\n\n  }\n\n  public getValue (): Promise<T> {\n    if (this.cachedPromise) {\n      return this.cachedPromise;\n    }\n\n    return this.cachedPromise = this.loader();\n  }\n\n  public reset(): void  {\n    this.cachedPromise = null;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RenderMarkdownComponent } from './render-markdown/render-markdown.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [RenderMarkdownComponent],\n  exports: [\n    RenderMarkdownComponent\n  ],\n  providers: []\n\n})\nexport class MarkdownModule {}\n","export * from './public_api';\n","import { MarkdownCacheService } from '@gewd/markdown/service';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport * as localforage from 'localforage';\nimport { simpleHash } from '@gewd/markdown/utils';\nimport { isPlatformBrowser } from '@angular/common';\n\n@Injectable()\nexport class MdCacheExampleService extends MarkdownCacheService {\n  private localForageCache: LocalForage;\n  private enabled = true;\n\n  constructor (@Inject(PLATFORM_ID) platformId: Object) {\n    super();\n\n    // skip localforage calls during pre-render step\n    this.enabled = isPlatformBrowser(platformId);\n\n    if (this.enabled) {\n      this.createInstance();\n    }\n  }\n\n  async saveCachedPart (type: string, raw: string, rendered: string) {\n    if (!this.enabled) {\n      return;\n    }\n\n    await this.localForageCache.ready();\n    const hash = simpleHash(raw);\n\n    this.localForageCache.setItem(`${type}/${hash}`, rendered);\n  }\n\n  async getCachedPart (type: string, raw: string): Promise<string> {\n    if (!this.enabled) {\n      return;\n    }\n\n    await this.localForageCache.ready();\n    const hash = simpleHash(raw);\n\n    const result = await this.localForageCache.getItem<string>(`${type}/${hash}`);\n\n    return result;\n  }\n\n  async getCached (rawMarkdown: string): Promise<string> {\n    if (!this.enabled) {\n      return;\n    }\n\n    await this.localForageCache.ready();\n    const hash = simpleHash(rawMarkdown);\n\n    const result = await this.localForageCache.getItem<string>(hash);\n\n    return result;\n  }\n\n  async saveCached (rawMarkdown: string, renderedMarkdown: string) {\n    if (!this.enabled) {\n      return;\n    }\n\n    await this.localForageCache.ready();\n    const hash = simpleHash(rawMarkdown);\n    this.localForageCache.setItem(hash, renderedMarkdown)\n  }\n\n  private async createInstance() {\n    this.localForageCache = localforage.createInstance({\n      name: 'markdown-cache',\n    });\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PortalHubService } from '../portal-hub.service';\nimport { switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'dynamic-portal',\n  templateUrl: './dynamic-portal.component.html',\n  styleUrls: ['./dynamic-portal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DynamicPortalComponent implements OnInit, OnChanges {\n  @Input()\n  key: string;\n\n  templateToShow$: Observable<TemplateRef<any>>;\n\n  private key$ = new BehaviorSubject('');\n\n  constructor (private hub: PortalHubService) {\n    this.templateToShow$ = this.key$.pipe(\n      switchMap(key => this.hub.getTemplate$(key))\n    );\n  }\n\n  ngOnInit (): void  {\n    this.checkKeyAndPushTemplate();\n  }\n\n  ngOnChanges (changes: SimpleChanges): void {\n    if (changes['key']) {\n      this.checkKeyAndPushTemplate();\n    }\n  }\n\n  private checkKeyAndPushTemplate () {\n    this.key$.next(this.key);\n  }\n}\n","export * from './lazy';\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  Injector, Input, OnChanges,\n  SimpleChanges, EventEmitter, OnDestroy, Output, ChangeDetectorRef, OnInit\n} from '@angular/core';\nimport {takeUntil} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\nimport { DynamicLoaderRegistry } from '@gewd/lazy/registry';\nimport { InputMap, OutputMap } from '@gewd/lazy/contracts';\n\n@Component({\n  selector: 'gewd-lazy-component',\n  template: `\n    <ng-container #targetContainer>\n    </ng-container>\n\n    <ng-content *ngIf=\"!component\"></ng-content>\n    <ng-content *ngIf=\"componentLoading | async\"\n                select=\"[isLoading]\"></ng-content>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LazyComponent implements OnInit, OnChanges, OnDestroy {\n  @Input()\n  public component: string;\n\n  @Input()\n  public componentInputs: InputMap;\n\n  @Input()\n  public componentOutputs: OutputMap;\n\n  @ViewChild('targetContainer', {read: ViewContainerRef, static: true})\n  public targetContainer: ViewContainerRef;\n\n  @Output()\n  public componentCreated = new EventEmitter();\n  @Output()\n  public componentLoading = new EventEmitter();\n\n  private componentInstance = null;\n\n  private unsubForOutputs$ = new Subject();\n\n  constructor (private resolver: ComponentFactoryResolver,\n               private injector: Injector,\n               private cd: ChangeDetectorRef) {\n  }\n\n  async setComponent () {\n    if (!this.component) {\n      return;\n    }\n\n    this.componentLoading.emit(true);\n    this.cd.detectChanges();\n\n    // cached promise\n    const importComponent = DynamicLoaderRegistry.LazyComponents[this.component].getValue();\n\n    const imported = await importComponent;\n\n    const keys = Object.keys(imported);\n\n    // get the first object of the imported js-module\n    const theComp = imported[keys[0]];\n\n    const componentFactory = this.resolver.resolveComponentFactory(theComp);\n\n    // only have one dynamic component render\n    this.targetContainer.clear();\n\n    const componentRef = this.targetContainer.createComponent(componentFactory, 0, this.injector);\n    componentRef.changeDetectorRef.markForCheck();\n\n    this.componentLoading.emit(false);\n    this.componentCreated.emit(componentRef.instance);\n    this.componentInstance = componentRef.instance;\n    this.setInputs();\n    this.setOutputs();\n  }\n\n  ngOnChanges (changes: SimpleChanges): void {\n    if (changes['component']) {\n      this.setComponent();\n    }\n    if (changes['componentInputs']) {\n      this.setInputs();\n    }\n    if (changes['componentOutputs']) {\n      this.setOutputs();\n    }\n  }\n\n  ngOnDestroy () {\n    this.unsubOutputs();\n  }\n\n  private setInputs () {\n    // console.info('setInputs', this.componentInstance, this.componentInputs);\n    if (this.componentInstance && this.componentInputs) {\n      const inputs = Object.keys(this.componentInputs);\n\n      for (const inputKey of inputs) {\n        // console.info('set ', inputKey)\n        this.componentInstance[inputKey] = this.componentInputs[inputKey];\n      }\n    }\n  }\n\n  private unsubOutputs () {\n    this.unsubForOutputs$.next();\n  }\n\n  private setOutputs () {\n    this.unsubOutputs();\n\n    if (this.componentInstance && this.componentOutputs) {\n      const outputs = Object.keys(this.componentOutputs);\n\n      for (const outputKey of outputs) {\n        // console.info('subscribe to', outputKey);\n        if (this.componentInstance[outputKey]) {\n          const emitter = this.componentInstance[outputKey] as EventEmitter<any>;\n          emitter.pipe(\n            takeUntil(this.unsubForOutputs$),\n          ).subscribe(this.componentOutputs[outputKey]);\n        }\n      }\n    }\n  }\n\n  ngOnInit (): void {\n    this.setComponent();\n  }\n}\n","import {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  Inject,\n  InjectionToken,\n  Injector,\n  ModuleWithProviders,\n  NgModule,\n  Type\n} from '@angular/core';\nimport { CommonModule, DOCUMENT } from '@angular/common';\n\nexport interface BootstrapComponentConfig {\n  elementName: string;\n  component: Type<any>;\n}\n\nexport const BOOTSTRAP_COMPONENT_TOKEN = new InjectionToken<BootstrapComponentConfig>('@gewd/ng-utils/BootstrapComponentConfig');\n\nexport function bootstrapComponent(\n  document: Document,\n  resolver: ComponentFactoryResolver,\n  injector: Injector,\n  appRef: ApplicationRef,\n  bootstrapConfig: BootstrapComponentConfig\n): void  {\n    const domElement = document.createElement(bootstrapConfig.elementName);\n\n    document.body.append(domElement);\n\n    const factory = resolver.resolveComponentFactory(bootstrapConfig.component);\n    const ref = factory.create(injector, [], domElement);\n\n    appRef.attachView(ref.hostView);\n}\n\n/** @dynamic - allows Document in ngc build */\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ]\n})\nexport class BootstrapComponentModule {\n  static component (useValue: BootstrapComponentConfig): ModuleWithProviders<BootstrapComponentModule> {\n    return {\n      ngModule: BootstrapComponentModule,\n      providers: [\n        { provide: BOOTSTRAP_COMPONENT_TOKEN, useValue, multi: true }\n      ]\n    };\n  }\n\n  constructor (@Inject(DOCUMENT) document: Document,\n               resolver: ComponentFactoryResolver,\n               injector: Injector,\n               appRef: ApplicationRef,\n               @Inject(BOOTSTRAP_COMPONENT_TOKEN) bootstrapConfigs: BootstrapComponentConfig[]) {\n    for (const bootstrapConfig of bootstrapConfigs) {\n      bootstrapComponent(document, resolver, injector, appRef, bootstrapConfig);\n    }\n  }\n}\n","export default \"<ng-container *ngIf=\\\"errors$ | async as errors\\\">\\n  <div class=\\\"fullscreen\\\"\\n       *ngIf=\\\"visible$ | async\\\"\\n  >\\n    <simple-pager [items]=\\\"errors\\\">\\n      <div simplePagerTopLeft>\\n        <dynamic-portal [key]=\\\"'errorName'\\\"></dynamic-portal>\\n      </div>\\n      <ng-template let-item>\\n         <ng-template [dynamicPortalSource]=\\\"'errorName'\\\">\\n           <span class=\\\"error-next-to-navigation\\\">{{item.name}}</span>\\n         </ng-template>\\n         <error-overlay [error]=\\\"item\\\"></error-overlay>\\n      </ng-template>\\n      <div simplePagerTopRight>\\n        <button class=\\\"mat-focus-indicator mat-button mat-raised-button mat-button-base\\\"\\n            (click)=\\\"hide()\\\">\\n      close\\n    </button>\\n      </div>\\n    </simple-pager>\\n  </div>\\n</ng-container>\\n\";","import { ComponentFactory, NgModuleRef, Type } from '@angular/core';\nimport { Lazy } from '@gewd/lazy/utils';\nimport { LazyModule } from '@gewd/lazy/contracts';\n\ninterface LoadedModule {\n  ngModule: NgModuleRef<any>;\n  componentFactories: ComponentFactory<any>[];\n}\n\nexport interface LazyModuleComponentConfig {\n  load: Lazy<Type<LazyModule>>; // the external import call to get the module\n  loadedModule?: Promise<LoadedModule>; // cached\n}\n\nexport class DynamicLoaderRegistry {\n  // Registry + Cache\n  public static readonly LazyComponents: { [key: string]: Lazy<any> } = {};\n\n  public static RegisterLazyComponent(componentName: string, lazyImport: Lazy<any>): void  {\n    DynamicLoaderRegistry.LazyComponents[componentName] = lazyImport;\n  }\n\n  // Registry\n  public static readonly LazyModuleComponents: { [key: string]: LazyModuleComponentConfig } = {};\n\n  public static RegisterLazyModuleComponent(moduleName: string, lazyImport: LazyModuleComponentConfig): void  {\n    DynamicLoaderRegistry.LazyModuleComponents[moduleName] = lazyImport;\n  }\n\n}\n","import { Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { MarkdownCacheService, MarkdownService } from '@gewd/markdown/service';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\n\nexport interface MarkdownLinkClicked {\n  event: Event;\n  link: HTMLLinkElement;\n}\n\n@Component({\n  selector: 'gewd-markdown',\n  templateUrl: './render-markdown.component.html',\n  styleUrls: ['./render-markdown.component.scss']\n})\nexport class RenderMarkdownComponent implements OnInit {\n  @Input()\n  public showRawMd = false;\n\n  @Input()\n  public useCache = false;\n\n  @Input()\n  public allowMermaid = true;\n\n  @Input()\n  public mermaidTheme: string;\n\n  get markdown (): string {\n    return this._markdown;\n  }\n\n  @Input()\n  set markdown (value: string) {\n    if (this._markdown  !== value) {\n      this._markdown = value;\n      if (this.showRawMd) {\n        this._htmlToShow$.next(value);\n      }\n      this.compile();\n    }\n  }\n\n  @Output()\n  public onLinkClick = new EventEmitter<MarkdownLinkClicked>();\n\n  private _htmlToShow$ = new BehaviorSubject<string|SafeHtml>(\"\");\n  private _markdown: string;\n\n  public parsedHtml$: Observable<string|SafeHtml>;\n\n  constructor (private service: MarkdownService,\n               private element: ElementRef,\n               private sanitizer: DomSanitizer,\n               private cache: MarkdownCacheService) {\n    this.parsedHtml$ = this._htmlToShow$;\n  }\n\n  async ngOnInit() {\n    await this.compile();\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(e: Event): void  {\n    let target = e.target as HTMLElement;\n\n    let aHref: HTMLLinkElement = null;\n\n    while (aHref === null && target !== null) {\n      if (target.tagName === 'A') {\n        aHref = target as any;\n      }\n\n      target = target.parentElement;\n    }\n\n    if (aHref) {\n      this.onLinkClick.next({\n        event: e,\n        link: aHref\n      });\n    }\n  }\n\n  private async compile() {\n    try {\n      if (this.useCache) {\n        const cachedMarkdown = await this.cache.getCached(this._markdown);\n        if (!!cachedMarkdown) {\n          this._htmlToShow$.next(this.sanitizer.bypassSecurityTrustHtml(cachedMarkdown));\n          return;\n        }\n      }\n\n      const parsedHtml = await this.service.compileMarkdown(this._markdown, this.allowMermaid);\n\n      this._htmlToShow$.next(this.sanitizer.bypassSecurityTrustHtml(parsedHtml));\n\n      if (this.useCache) {\n        this.cache.saveCached(this._markdown, parsedHtml);\n      }\n    } catch (er) {\n      console.error(er);\n      this._htmlToShow$.next(er);\n    }\n  }\n}\n","export * from './public_api';\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";","export * from './public_api';\n"]}